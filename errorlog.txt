> vue-tsc --noEmit && vite build

src/layout/components/Header.vue:75:15 - error TS2339: Property 'clearAuth' does not exist on type 'Store<"user", { token: string; refreshToken: string; tokenExpires: number; userInfo: UserInfo | null; }, {}, { getUserInfoAction(): Promise<void>; setUserInfo(info: UserInfo): void; }>'.

75     userStore.clearAuth()
                 ~~~~~~~~~

src/router/index.ts:110:15 - error TS2339: Property 'clearAuth' does not exist on type 'Store<"user", { token: string; refreshToken: string; tokenExpires: number; userInfo: UserInfo | null; }, {}, { getUserInfoAction(): Promise<void>; setUserInfo(info: UserInfo): void; }>'.

110     userStore.clearAuth()
                  ~~~~~~~~~

src/router/index.ts:121:17 - error TS2339: Property 'clearAuth' does not exist on type 'Store<"user", { token: string; refreshToken: string; tokenExpires: number; userInfo: UserInfo | null; }, {}, { getUserInfoAction(): Promise<void>; setUserInfo(info: UserInfo): void; }>'.

121       userStore.clearAuth()
                    ~~~~~~~~~

src/router/permission.ts:23:21 - error TS2339: Property 'clearAuth' does not exist on type 'Store<"user", { token: string; refreshToken: string; tokenExpires: number; userInfo: UserInfo | null; }, {}, { getUserInfoAction(): Promise<void>; setUserInfo(info: UserInfo): void; }>'.

23           userStore.clearAuth()
                       ~~~~~~~~~

src/stores/user.ts:17:24 - error TS2352: Conversion of type 'ApiResponse<any>' to type 'UserInfo' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ApiResponse<any>' is missing the following properties from type 'UserInfo': id, username, role_id, status, and 2 more.

17       this.setUserInfo(data as UserInfo)
                          ~~~~~~~~~~~~~~~~

src/utils/request.ts:33:3 - error TS2345: Argument of type '(response: AxiosResponse<ApiResponse>) => Promise<AxiosResponse<any, any>> | Promise<ApiResponse<any>>' is not assignable to parameter of type '(value: AxiosResponse<any, any>) => AxiosResponse<any, any> | Promise<AxiosResponse<any, any>>'.
  Type 'Promise<AxiosResponse<any, any>> | Promise<ApiResponse<any>>' is not assignable to type 'AxiosResponse<any, any> | Promise<AxiosResponse<any, any>>'.
    Type 'Promise<ApiResponse<any>>' is not assignable to type 'AxiosResponse<any, any> | Promise<AxiosResponse<any, any>>'.
      Type 'Promise<ApiResponse<any>>' is not assignable to type 'Promise<AxiosResponse<any, any>>'.
        Type 'ApiResponse<any>' is missing the following properties from type 'AxiosResponse<any, any>': status, statusText, headers, config

33   (response: AxiosResponse<ApiResponse>) => {
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/views/login/index.vue:79:23 - error TS2352: Conversion of type 'ApiResponse<any>' to type 'LoginResponse' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ApiResponse<any>' is missing the following properties from type 'LoginResponse': token, refreshToken, expires, userInfo

79     const loginData = data as LoginResponse
                         ~~~~~~~~~~~~~~~~~~~~~

src/views/login/index.vue:82:15 - error TS2339: Property 'setToken' does not exist on type 'Store<"user", { token: string; refreshToken: string; tokenExpires: number; userInfo: UserInfo | null; }, {}, { getUserInfoAction(): Promise<void>; setUserInfo(info: UserInfo): void; }>'.

82     userStore.setToken(token, refreshToken, expires)
                 ~~~~~~~~

src/views/login/index.vue:83:27 - error TS2345: Argument of type '{ id: number; username: string; role_id: number; status: 0 | 1; menus: Menu[]; }' is not assignable to parameter of type 'UserInfo'.
  Type '{ id: number; username: string; role_id: number; status: 0 | 1; menus: Menu[]; }' is missing the following properties from type 'UserInfo': created_at, updated_at

83     userStore.setUserInfo(userInfo)
                             ~~~~~~~~

src/views/orders/index.vue:45:15 - error TS2322: Type '[Date, Date] | null' is not assignable to type 'EpPropMergeType<(new (...args: any[]) => string | number | string[] | Date | [DateModelType, DateModelType]) | (() => ModelValueType) | ((new (...args: any[]) => string | ... 3 more ... | [...]) | (() => ModelValueType))[], unknown, unknown> | undefined'.

45               v-model="dateRange"
                 ~~~~~~~

  node_modules/element-plus/es/components/date-picker/src/date-picker.d.ts:200:14
    200     readonly modelValue: import("element-plus/es/utils").EpPropMergeType<(new (...args: any[]) => string | number | string[] | Date | [DateModelType, DateModelType]) | (() => import("element-plus/es/components/time-picker").ModelValueType) | ((new (...args: any[]) => string | number | string[] | Date | [DateModelType, DateModelType]) | (() => import("element-plus/es/components/time-picker").ModelValueType))[], unknown, unknown>;
                     ~~~~~~~~~~
    The expected type comes from property 'modelValue' which is declared here on type 'Partial<{ readonly disabled: boolean; readonly type: EpPropMergeType<(new (...args: any[]) => "year" | "month" | "date" | "years" | "months" | "dates" | "week" | "datetime" | "datetimerange" | "daterange" | "monthrange" | "yearrange") | (() => IDatePickerType) | ((new (...args: any[]) => "year" | ... 10 more ... | "...'

src/views/orders/index.vue:316:17 - error TS2352: Conversion of type 'AxiosResponse<ApiResponse<any>, any>' to type 'ApiPageResponse<Order>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'AxiosResponse<ApiResponse<any>, any>' is missing the following properties from type 'ApiPageResponse<Order>': code, message

316     const res = await getOrders(queryParams.value) as ApiPageResponse<Order>
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/views/users/index.vue:223:22 - error TS2352: Conversion of type 'AxiosResponse<ApiResponse<any>, any>' to type 'ApiPageResponse<UserInfo>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'AxiosResponse<ApiResponse<any>, any>' is missing the following properties from type 'ApiPageResponse<UserInfo>': code, message

223     const { data } = await getUsers(queryParams.value) as ApiPageResponse<UserInfo>
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Found 12 errors in 8 files.