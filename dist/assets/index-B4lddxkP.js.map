{"version":3,"file":"index-B4lddxkP.js","sources":["../../src/views/users/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"toolbar\">\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"search-form\">\n        <el-form-item>\n          <el-input\n            v-model=\"queryParams.username\"\n            placeholder=\"用户名\"\n            clearable\n            @keyup.enter=\"handleSearch\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-select \n            v-model=\"queryParams.role_id\" \n            placeholder=\"角色\" \n            clearable\n            filterable\n          >\n            <el-option \n              v-for=\"role in roleList\"\n              :key=\"role.id\"\n              :label=\"role.role_name\"\n              :value=\"role.id\"\n            >\n              {{ role.role_name }}\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-select \n            v-model=\"queryParams.status\" \n            placeholder=\"状态\" \n            clearable\n            filterable\n          >\n            <el-option \n              v-for=\"item in statusOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            >\n              {{ item.label }}\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      <el-button type=\"primary\" @click=\"handleAdd\">新增用户</el-button>\n    </div>\n\n    <el-table v-loading=\"loading\" :data=\"userList\" style=\"width: 100%; margin-top: 20px\">\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n      <el-table-column prop=\"username\" label=\"用户名\" />\n      <el-table-column prop=\"real_name\" label=\"姓名\" />\n      <el-table-column prop=\"email\" label=\"邮箱\" />\n      <el-table-column prop=\"role_name\" label=\"角色\" />\n      <el-table-column label=\"状态\" width=\"100\">\n        <template #default=\"{ row }\">\n          <el-switch\n            v-model=\"row.status\"\n            :active-value=\"1\"\n            :inactive-value=\"0\"\n            @change=\"handleStatusChange(row)\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\">\n        <template #default=\"{ row }\">\n          {{ formatDate(row.created_at) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n        <template #default=\"{ row }\">\n          <el-button type=\"primary\" link @click=\"handleEdit(row)\">编辑</el-button>\n          <el-button type=\"danger\" link @click=\"handleDelete(row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 用户表单对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      v-model=\"dialogVisible\"\n      width=\"500px\"\n      @close=\"resetForm\"\n    >\n      <el-form\n        ref=\"formRef\"\n        :model=\"userForm\"\n        :rules=\"rules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input \n            v-model=\"userForm.username\" \n            placeholder=\"请输入用户名\"\n            :disabled=\"!!userForm.id\"\n          />\n        </el-form-item>\n        <el-form-item \n          label=\"密码\" \n          prop=\"password\"\n          :rules=\"[\n            { required: !userForm.id, message: '请输入密码', trigger: 'blur' },\n            { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\n          ]\"\n        >\n          <el-input\n            v-model=\"userForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          />\n        </el-form-item>\n        <el-form-item label=\"姓名\" prop=\"real_name\">\n          <el-input v-model=\"userForm.real_name\" placeholder=\"请输入姓名\" />\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"userForm.email\" placeholder=\"请输入邮箱\" />\n        </el-form-item>\n        <el-form-item label=\"角色\" prop=\"role_id\">\n          <el-select v-model=\"userForm.role_id\" placeholder=\"请选择角色\">\n            <el-option\n              v-for=\"role in roleList\"\n              :key=\"role.id\"\n              :label=\"role.role_name\"\n              :value=\"role.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-switch\n            v-model=\"userForm.status\"\n            :active-value=\"1\"\n            :inactive-value=\"0\"\n          />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n          确定\n        </el-button>\n      </template>\n    </el-dialog>\n\n   \n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, watch } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport type { FormInstance, FormRules } from 'element-plus'\nimport { getUsers, createUser, updateUser, deleteUser, updateUserStatus } from '@/api/user'\nimport { getRoles } from '@/api/role'\nimport type { UserInfo, UserForm, UserQuery } from '@/types/user'\nimport type { Role } from '@/types/role'\nimport { formatDate } from '@/utils/format'\nimport type { ApiPageResponse } from '@/types/response'\nimport type { DateModelType } from 'element-plus'\nimport { formatDateRange } from '@/utils/date'\n\nconst loading = ref(false)\nconst userList = ref<UserInfo[]>([])\nconst roleList = ref<Role[]>([])\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\nconst submitting = ref(false)\n\nconst formRef = ref<FormInstance>()\nconst userForm = ref<UserForm>({\n  username: '',\n  password: '',\n  role_id: undefined,\n  real_name: '',\n  email: '',\n  status: 1\n})\n\n// 查询参数\nconst queryParams = ref<UserQuery>({\n  page: 1,\n  pageSize: 10,\n  username: '',\n  role_id: undefined,\n  status: undefined\n})\n\nconst rules: FormRules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n  ],\n  role_id: [\n    { required: true, message: '请选择角色', trigger: 'change' }\n  ],\n  email: [\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n  ]\n}\n\n// 状态选项\nconst statusOptions = [\n  { label: '启用', value: 1 },\n  { label: '禁用', value: 0 }\n] as const\n\n// 分页相关\nconst total = ref(0)\n\n// 搜索表单\nconst searchForm = ref({\n  username: '',\n  role_id: '',\n  status: ''\n})\n\n// 日期范围\nconst dateRange = ref<[DateModelType, DateModelType] | undefined>()\n\n// 获取用户列表\nconst getUserList = async () => {\n  try {\n    loading.value = true\n    const res = await getUsers()\n    if (res.data && res.data.data) {\n      userList.value = res.data.data\n    }\n  } catch (error) {\n    console.error('获取用户列表失败:', error)\n    ElMessage.error('获取用户列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取角色列表\nconst getRoleList = async () => {\n  try {\n    const res = await getRoles()\n    if (res.data && res.data.data) {\n      roleList.value = res.data.data\n    }\n  } catch (error) {\n    console.error('获取角色列表失败:', error)\n  }\n}\n\n// 搜索\nconst handleSearch = () => {\n  console.log('点击搜索按钮，查询条件:', queryParams.value)  // 添加日志打印\n  getUserList()\n}\n\n// 重置查询\nconst resetQuery = () => {\n  queryParams.value = {\n    page: 1,\n    pageSize: 10,\n    username: '',\n    role_id: undefined,\n    status: undefined\n  }\n  getUserList()\n}\n\n// 新增用户\nconst handleAdd = () => {\n  dialogTitle.value = '新增用户'\n  dialogVisible.value = true\n}\n\n// 编辑用户\nconst handleEdit = (row: UserInfo) => {\n  dialogTitle.value = '编辑用户'\n  userForm.value = {\n    ...row,\n    password: '' // 编辑时不显示密码\n  }\n  dialogVisible.value = true\n}\n\n// 删除用户\nconst handleDelete = async (row: UserInfo) => {\n  try {\n    await ElMessageBox.confirm('确认删除该用户吗？', '提示', {\n      type: 'warning'\n    })\n    \n    await deleteUser(row.id)\n    ElMessage.success('删除成功')\n    getUserList()\n  } catch (error) {\n    console.error('Delete user error:', error)\n  }\n}\n\n// 修改用户状态\nconst handleStatusChange = async (row: UserInfo) => {\n  try {\n    await updateUserStatus(row.id, { status: row.status })\n    ElMessage.success('状态更新成功')\n  } catch (error) {\n    console.error('更新状态失败:', error)\n    // 回滚状态\n    row.status = row.status === 1 ? 0 : 1\n  }\n}\n\n// 提交表单\nconst handleSubmit = async () => {\n  if (!formRef.value) return\n  \n  await formRef.value.validate()\n  \n  try {\n    submitting.value = true\n    const submitData = { ...userForm.value }\n    if (!submitData.password) {\n      delete submitData.password\n    }\n    \n    if (userForm.value.id) {\n      await updateUser(userForm.value.id, submitData)\n      ElMessage.success('更新成功')\n    } else {\n      await createUser(submitData)\n      ElMessage.success('创建成功')\n    }\n    dialogVisible.value = false\n    getUserList()\n  } catch (error) {\n    console.error('Submit user error:', error)\n  } finally {\n    submitting.value = false\n  }\n}\n\n// 重置表单\nconst resetForm = () => {\n  if (formRef.value) {\n    formRef.value.resetFields()\n  }\n  userForm.value = {\n    username: '',\n    password: '',\n    role_id: undefined,\n    real_name: '',\n    email: '',\n    status: 1\n  }\n}\n\n// 格式化状态显示\nconst formatStatus = (status: number) => {\n  return statusOptions.find((item) => item.value === status)?.label || '未知'\n}\n\n// 监听日期变化\nwatch(dateRange, (val) => {\n  const { startTime, endTime } = formatDateRange(val)\n  queryParams.value.startTime = startTime\n  queryParams.value.endTime = endTime\n})\n\nonMounted(async () => {\n  await getUserList()\n  await getRoleList()\n  console.log('roleList:', roleList.value)\n})\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n.toolbar {\n  padding: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.search-form {\n  flex: 1;\n  margin-right: 20px;\n}\n</style>\n"],"names":["loading","ref","userList","roleList","dialogVisible","dialogTitle","submitting","formRef","userForm","queryParams","rules","statusOptions","dateRange","getUserList","res","getUsers","error","ElMessage","getRoleList","getRoles","handleSearch","resetQuery","handleAdd","handleEdit","row","handleDelete","ElMessageBox","deleteUser","handleStatusChange","updateUserStatus","handleSubmit","submitData","updateUser","createUser","resetForm","watch","val","startTime","endTime","formatDateRange","onMounted"],"mappings":"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"}