{"version":3,"file":"index-D3zsqnx5.js","sources":["../../src/views/issues/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 头部搜索区域 -->\n    <div class=\"search-area bg-white rounded-lg p-3\">\n      <div class=\"flex items-center space-x-4\">\n        <el-input\n          v-model=\"searchQuery\"\n          placeholder=\"搜索问题...\"\n          class=\"!w-[260px]\"\n          size=\"large\"\n          @keyup.enter=\"handleSearch\"\n        >\n          <template #prefix>\n            <el-icon class=\"text-gray-400\"><Search /></el-icon>\n          </template>\n        </el-input>\n        <el-select v-model=\"statusFilter\" placeholder=\"所有状态\" class=\"!w-[150px]\" size=\"large\" @change=\"handleSearch\">\n          <el-option label=\"所有状态\" value=\"\" />\n          <el-option label=\"待处理\" value=\"pending\" />\n          <el-option label=\"处理中\" value=\"processing\" />\n          <el-option label=\"已完成\" value=\"completed\" />\n        </el-select>\n        <el-button type=\"primary\" @click=\"handleCreateIssue\" class=\"!min-w-[100px]\" size=\"large\">\n          新建问题\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 加载中 -->\n    <div v-if=\"loading\" class=\"flex justify-center items-center py-12\">\n      <el-spinner text=\"加载中...\"></el-spinner>\n    </div>\n\n    <!-- 问题列表为空 -->\n    <div v-else-if=\"issues.length === 0\" class=\"flex flex-col justify-center items-center py-20\">\n      <el-empty description=\"暂无问题\" />\n      <el-button type=\"primary\" @click=\"handleCreateIssue\" class=\"mt-4\">新建问题</el-button>\n    </div>\n\n    <!-- 问题列表 -->\n    <div v-else class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n      <div\n        v-for=\"issue in issues\"\n        :key=\"issue.id\"\n        class=\"issue-card bg-white rounded-lg shadow-sm overflow-hidden cursor-pointer hover:shadow-md transition-shadow duration-300\"\n        @click=\"openDrawer(issue)\"\n      >\n        <div class=\"issue-card-content\">\n          <!-- 问题编号 -->\n          <div class=\"issue-card-header\">\n            <span class=\"issue-id\">#{{ issue.id }}</span>\n            <h3 class=\"issue-card-title\">{{ issue.title }}</h3>\n            <!-- 标签组 -->\n            <div class=\"tags-group\">\n              <el-tag\n                :type=\"getPriorityType(issue.priority)\"\n                effect=\"light\"\n                class=\"priority-tag\"\n              >\n                {{ getPriorityLabel(issue.priority) }}\n              </el-tag>\n              <el-tag\n                :type=\"getStatusType(issue.status)\"\n                effect=\"light\"\n                class=\"status-tag\"\n              >\n                {{ getStatusLabel(issue.status) }}\n              </el-tag>\n            </div>\n          </div>\n          \n          <!-- 时间显示放到标题下方 -->\n          <div class=\"time-section mb-4\">\n            <div class=\"time-tag create-time\">\n              <el-icon class=\"mr-1\"><Calendar /></el-icon>\n              <span>创建: {{ formatDate(issue.createTime) }}</span>\n            </div>\n            \n            <div v-if=\"issue.deadline\" :class=\"['time-tag deadline-tag', isDeadlineNear(issue.deadline) ? 'deadline-near' : '']\">\n              <el-icon class=\"mr-1\"><Clock /></el-icon>\n              <span>截止: {{ formatDatetime(issue.deadline) }}</span>\n              <el-tag \n                v-if=\"isDeadlineNear(issue.deadline)\" \n                type=\"danger\" \n                effect=\"light\" \n                size=\"small\"\n                class=\"ml-2\"\n              >\n                即将到期\n              </el-tag>\n            </div>\n          </div>\n          \n          <!-- 状态流程条 -->\n          <div class=\"status-flow-section mb-5\">\n            <div class=\"status-flow\" :class=\"{\n              'flow-pending': issue.status === 'pending',\n              'flow-processing': issue.status === 'processing',\n              'flow-completed': issue.status === 'completed'\n            }\">\n              <div \n                class=\"status-step\"\n                :class=\"{\n                  'status-pending': issue.status === 'pending',\n                  'status-completed': ['processing', 'completed'].includes(issue.status),\n                  'status-current': issue.status === 'pending'\n                }\"\n              >\n                <div class=\"status-dot\"></div>\n                <span class=\"status-text\">待处理</span>\n              </div>\n              <div class=\"status-line\"></div>\n              <div \n                class=\"status-step\"\n                :class=\"{\n                  'status-completed': issue.status === 'completed',\n                  'status-current': issue.status === 'processing'\n                }\"\n              >\n                <div class=\"status-dot\"></div>\n                <span class=\"status-text\">处理中</span>\n              </div>\n              <div class=\"status-line\"></div>\n              <div \n                class=\"status-step\"\n                :class=\"{\n                  'status-completed': issue.status === 'completed',\n                  'status-current': false\n                }\"\n              >\n                <div class=\"status-dot\"></div>\n                <span class=\"status-text\">已完成</span>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 用户信息区域 - 单行显示 -->\n          <div class=\"users-section\">\n            <div class=\"users-row\">\n              <div class=\"user-cell\">\n                <span class=\"user-label\">创建人:</span>\n                <div class=\"user-info\">\n                  <el-avatar :size=\"24\" :src=\"getAvatarUrl(issue.creator.name)\" class=\"user-avatar\" />\n                  <span class=\"user-name\">{{ issue.creator.name }}</span>\n                </div>\n              </div>\n              \n              <div class=\"user-cell\">\n                <span class=\"user-label\">负责人:</span>\n                <div class=\"user-info\">\n                  <el-avatar :size=\"24\" :src=\"getAvatarUrl(issue.assignee.name)\" class=\"user-avatar\" />\n                  <span class=\"user-name\">{{ issue.assignee.name }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加加载更多提示 -->\n    <div v-if=\"hasMore\" class=\"text-center py-4\">\n      <div class=\"loading-more\">\n        <el-spinner class=\"mr-2\" size=\"small\"></el-spinner>\n        <span class=\"text-gray-500\">加载更多...</span>\n      </div>\n    </div>\n\n    <!-- 问题详情抽屉 -->\n    <el-drawer\n      v-model=\"drawerVisible\"\n      :title=\"currentIssue?.title || '问题详情'\"\n      size=\"55%\"\n      :destroy-on-close=\"true\"\n    >\n      <template #header>\n        <div v-if=\"currentIssue\" class=\"flex items-center space-x-4\">\n          <h2 class=\"text-2xl font-bold\">{{ currentIssue.title }}</h2>\n          <el-tag\n            :type=\"getStatusType(currentIssue.status)\"\n            effect=\"light\"\n            size=\"large\"\n          >\n            {{ getStatusLabel(currentIssue.status) }}\n          </el-tag>\n        </div>\n        <div v-else class=\"flex items-center space-x-4\">\n          <h2 class=\"text-2xl font-bold\">加载中...</h2>\n        </div>\n      </template>\n\n      <!-- 加载中 -->\n      <div v-if=\"loadingDetail\" class=\"flex justify-center items-center py-12\">\n        <el-spinner text=\"加载中...\"></el-spinner>\n      </div>\n\n      <div v-else-if=\"currentIssue\" class=\"issue-detail space-y-6 p-6\">\n        <!-- 基本信息 -->\n        <div class=\"info-card bg-white rounded-lg p-6 shadow-sm\">\n          <!-- 标题和编号行 -->\n          <div class=\"flex items-center gap-3 mb-4\">\n            <span class=\"issue-number font-mono text-gray-500 text-base\">#{{ currentIssue.id }}</span>\n            <h2 class=\"text-xl font-semibold text-gray-900\">{{ currentIssue.title }}</h2>\n          </div>\n          \n          <!-- 标签行 -->\n          <div class=\"flex items-center justify-between mb-6\">\n            <div class=\"tags-row flex items-center gap-3\">\n              <div class=\"tag-item\">\n                <span class=\"tag-label text-gray-500\">优先级</span>\n                <el-tag\n                  :type=\"getPriorityType(currentIssue.priority)\"\n                  effect=\"plain\"\n                  class=\"priority-tag\"\n                  size=\"large\"\n                >\n                  {{ getPriorityLabel(currentIssue.priority) }}\n                </el-tag>\n              </div>\n              <div class=\"tag-item\">\n                <span class=\"tag-label text-gray-500\">状态</span>\n                <el-tag\n                  :type=\"getStatusType(currentIssue.status)\"\n                  effect=\"plain\"\n                  class=\"status-tag\"\n                  size=\"large\"\n                >\n                  {{ getStatusLabel(currentIssue.status) }}\n                </el-tag>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"issue-timeline mb-6\">\n            <div class=\"timeline-item\">\n              <el-icon class=\"timeline-icon\"><Calendar /></el-icon>\n              <div class=\"timeline-content\">\n                <div class=\"text-sm text-gray-500\">创建时间</div>\n                <div class=\"text-base font-medium\">{{ formatDate(currentIssue.createTime) }}</div>\n              </div>\n            </div>\n            <div class=\"timeline-divider\"></div>\n            <div class=\"timeline-item\">\n              <el-icon class=\"timeline-icon\"><Clock /></el-icon>\n              <div class=\"timeline-content\">\n                <div class=\"text-sm text-gray-500\">截止时间</div>\n                <div class=\"deadline-info\">\n                  <span class=\"text-base font-medium\">{{ formatDatetime(currentIssue.deadline) }}</span>\n                  <el-tag \n                    v-if=\"isDeadlineNear(currentIssue.deadline)\" \n                    type=\"danger\" \n                    effect=\"light\" \n                    size=\"small\"\n                    class=\"ml-2\"\n                  >\n                    即将到期\n                  </el-tag>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 用户信息区域 -->\n          <div class=\"users-info\">\n            <div class=\"flex justify-between items-start\">\n              <!-- 创建人 -->\n              <div class=\"user-box\">\n                <span class=\"user-role-label\">创建人</span>\n                <div class=\"user-detail\">\n                  <el-avatar :size=\"40\" :src=\"getAvatarUrl(currentIssue.creator?.name)\" />\n                  <div class=\"user-info\">\n                    <span class=\"user-name\">{{ currentIssue.creator?.name }}</span>\n                    <span class=\"user-role\">发起人</span>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- 负责人 -->\n              <div class=\"user-box\">\n                <span class=\"user-role-label\">负责人</span>\n                <div class=\"user-detail\">\n                  <el-avatar :size=\"40\" :src=\"getAvatarUrl(currentIssue.assignee.name)\" />\n                  <div class=\"user-info\">\n                    <span class=\"user-name\">{{ currentIssue.assignee.name }}</span>\n                    <span class=\"user-role\">处理人</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 问题描述 -->\n        <div class=\"info-card bg-white rounded-lg p-6 shadow-sm\">\n          <h3 class=\"text-lg font-semibold mb-4 text-gray-900 border-b pb-2\">问题描述</h3>\n          <p class=\"description-content\">\n            {{ currentIssue.description }}\n          </p>\n        </div>\n\n        <!-- 处理记录 -->\n        <div class=\"info-card bg-white rounded-lg p-6 shadow-sm\">\n          <h3 class=\"text-lg font-semibold mb-4 text-gray-900 border-b pb-2\">处理记录</h3>\n          <div class=\"space-y-5\">\n            <!-- 处理记录列表 -->\n            <div class=\"chat-records\">\n              <div\n                v-for=\"record in currentIssue.records\"\n                :key=\"record.id\"\n                class=\"chat-record-item mb-6\"\n              >\n                <div class=\"flex items-start gap-3\">\n                  <el-avatar :size=\"40\" :src=\"getAvatarUrl(record.user.name)\" class=\"flex-shrink-0\" />\n                  <div class=\"flex-grow\">\n                    <div class=\"flex items-center justify-between mb-1\">\n                      <span class=\"font-medium text-gray-900\">{{ record.user.name + \" : \" }}</span>\n                      <span class=\"text-sm text-gray-500\">{{ record.createTime }}</span>\n                    </div>\n                    <div class=\"chat-bubble bg-gray-100 rounded-lg p-4 text-gray-800\" v-html=\"record.content\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- 添加处理记录 - 只有创建人和负责人可见 -->\n            <div v-if=\"canAddRecord\" class=\"add-record-section mt-8\">\n              <h4 class=\"font-medium text-gray-900 mb-4 border-b pb-2\">添加处理记录</h4>\n              <div class=\"mb-5\">\n                <el-input\n                  type=\"textarea\"\n                  v-model=\"newRecordContent\"\n                  placeholder=\"请输入处理记录内容...\"\n                  :rows=\"5\"\n                  :disabled=\"addingRecord\"\n                ></el-input>\n              </div>\n              <div class=\"status-selector mb-4\">\n                <div class=\"label-required mb-2\">更新问题状态</div>\n                <el-select \n                  v-model=\"newRecordStatus\" \n                  placeholder=\"请选择要更新的状态\" \n                  size=\"large\" \n                  :disabled=\"addingRecord\"\n                  class=\"w-full\"\n                >\n                  <el-option label=\"待处理\" value=\"pending\" />\n                  <el-option label=\"处理中\" value=\"processing\" />\n                  <el-option label=\"已完成\" value=\"completed\" />\n                </el-select>\n              </div>\n              <div class=\"flex justify-end mt-5\">\n                <el-button type=\"primary\" size=\"large\" @click=\"addRecord\" :loading=\"addingRecord\" :disabled=\"!newRecordContent || !newRecordStatus\">\n                  添加记录\n                </el-button>\n              </div>\n            </div>\n\n            <div v-if=\"currentIssue.records.length === 0\" class=\"text-center text-gray-500 py-8\">\n              暂无处理记录\n            </div>\n          </div>\n        </div>\n      </div>\n      <template #footer>\n        <div class=\"flex space-x-4\">\n          <!-- <el-button type=\"primary\" @click=\"handleEditIssue\" :disabled=\"loadingDetail\">\n            编辑问题\n          </el-button> -->\n          <el-button @click=\"handleCloseIssue\">\n            关闭\n          </el-button>\n        </div>\n      </template>\n    </el-drawer>\n\n    <!-- 新建问题弹窗 -->\n    <el-dialog\n      v-model=\"createDialogVisible\"\n      title=\"新建问题\"\n      width=\"650px\"\n      :destroy-on-close=\"true\"\n    >\n      <div class=\"create-form\">\n        <el-form :model=\"newIssue\" label-position=\"top\" :rules=\"formRules\" ref=\"createFormRef\">\n          <el-form-item label=\"问题标题\" prop=\"title\">\n            <el-input v-model=\"newIssue.title\" placeholder=\"请输入问题标题\"></el-input>\n          </el-form-item>\n          \n          <div class=\"grid grid-cols-2 gap-4\">\n            <el-form-item label=\"优先级\" prop=\"priority\">\n              <el-select v-model=\"newIssue.priority\" placeholder=\"请选择优先级\" class=\"w-full\">\n                <el-option label=\"高优先级\" value=\"high\" />\n                <el-option label=\"中优先级\" value=\"medium\" />\n                <el-option label=\"低优先级\" value=\"low\" />\n              </el-select>\n            </el-form-item>\n            \n            <el-form-item label=\"负责人\" prop=\"assignee\">\n              <el-select v-model=\"newIssue.assignee\" placeholder=\"请选择负责人\" class=\"w-full\">\n                <el-option\n                  v-for=\"user in users\"\n                  :key=\"user.id\"\n                  :label=\"user.name\"\n                  :value=\"user.id\"\n                >\n                  <div class=\"user-option flex items-center justify-between w-full\">\n                    <div class=\"flex items-center\">\n                      <el-avatar :size=\"26\" :src=\"user.avatar\" class=\"user-avatar\"></el-avatar>\n                      <span class=\"user-name\">{{ user.name }}</span>\n                    </div>\n                    <span class=\"user-role text-xs text-gray-500\">{{ user.role || '用户' }}</span>\n                  </div>\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n          \n          <div class=\"grid grid-cols-2 gap-4\">\n            <el-form-item label=\"截止日期\" prop=\"deadline\">\n              <el-date-picker\n                v-model=\"newIssue.deadline\"\n                type=\"datetime\"\n                placeholder=\"请选择截止日期\"\n                format=\"YYYY-MM-DD HH:mm\"\n                value-format=\"YYYY-MM-DD HH:mm\"\n                class=\"w-full\"\n              ></el-date-picker>\n            </el-form-item>\n          </div>\n          \n          <el-form-item label=\"问题描述\" prop=\"description\">\n            <el-input\n              v-model=\"newIssue.description\"\n              type=\"textarea\"\n              :rows=\"6\"\n              placeholder=\"请输入问题描述\"\n            ></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      \n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"createDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitNewIssue\" :loading=\"submitting\">创建问题</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, computed, onUnmounted } from 'vue'\nimport { formatDate } from '@/utils/format'\nimport { Calendar, Clock, Search } from '@element-plus/icons-vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getIssueList, getIssueDetail, createIssue, updateIssue, addIssueRecord, getUserList } from '@/api/issues'\nimport type { IssueItem, IssueDetail, IssueStatus } from '@/types/issues'\nimport type { ApiUser } from '@/types/user'\nimport { useUserStore } from '@/stores/user'\n\n// 加载状态\nconst loading = ref(false)\nconst loadingDetail = ref(false)\nconst submitting = ref(false)\nconst addingRecord = ref(false)\n\n// 分页\nconst currentPage = ref(1)\nconst pageSize = ref(10)\nconst total = ref(0)\n\n// 滚动加载相关\nconst loadingMore = ref(false)\nconst hasMore = ref(true)\n\n// 搜索和筛选\nconst searchQuery = ref('')\nconst statusFilter = ref('')\n\n// 抽屉控制\nconst drawerVisible = ref(false)\nconst currentIssue = ref<IssueDetail | null>(null)\n\n// 新增变量和函数\nconst newRecordContent = ref('')\nconst newRecordStatus = ref('')\n\n// 新建问题弹窗控制\nconst createDialogVisible = ref(false)\nconst createFormRef = ref(null)\n\n// 新建问题表单\nconst newIssue = ref({\n  title: '',\n  priority: 'medium',\n  status: 'pending',\n  description: '',\n  deadline: '',\n  assignee: ''\n})\n\n// 表单验证规则\nconst formRules = {\n  title: [{ required: true, message: '请输入问题标题', trigger: 'blur' }],\n  priority: [{ required: true, message: '请选择优先级', trigger: 'change' }],\n  assignee: [{ required: true, message: '请选择负责人', trigger: 'change' }],\n  deadline: [{ required: true, message: '请选择截止日期', trigger: 'change' }],\n  description: [{ required: true, message: '请输入问题描述', trigger: 'blur' }]\n}\n\n// 用户列表\nconst users = ref<Array<{id: string, name: string, avatar: string | null, role?: string}>>([])\n\n// 问题列表\nconst issues = ref<IssueItem[]>([])\n\n// 从状态管理中获取当前用户信息\nconst userStore = useUserStore()\nconst currentUserId = computed(() => userStore.userInfo?.id || null)\n\n// 判断是否可以添加记录\nconst canAddRecord = computed(() => {\n  if (!currentIssue.value || !currentUserId.value) {\n    console.log('不显示添加记录区域，原因:', !currentIssue.value ? '问题详情不存在' : '当前用户ID未获取')\n    return false\n  }\n\n  // 检查当前用户是否为创建者或负责人\n  // 确保进行类型转换后比较\n  const currentId = Number(currentUserId.value)\n  const creatorId = currentIssue.value.creator?.id ? Number(currentIssue.value.creator.id) : null\n  const assigneeId = currentIssue.value.assignee?.id ? Number(currentIssue.value.assignee.id) : null\n  \n  const isCreator = creatorId === currentId\n  const isAssignee = assigneeId === currentId\n  \n  console.log('权限检查详情:', {\n    当前用户ID: currentId,\n    创建者ID: creatorId,\n    负责人ID: assigneeId,\n    是创建者: isCreator,\n    是负责人: isAssignee,\n    可添加记录: isCreator || isAssignee\n  })\n  \n  return isCreator || isAssignee\n})\n\n// 获取用户列表\nconst fetchUsers = async () => {\n  try {\n    const res = await getUserList()\n    if (res.data.code === 0 && res.data.data) {\n      // 将API返回的用户数据映射为下拉框需要的格式\n      users.value = res.data.data.map((user: ApiUser) => ({\n        id: user.id,\n        name: user.real_name || user.username, // 优先使用真实姓名，否则使用用户名\n        avatar: getAvatarUrl(user.real_name || user.username), // 使用开源API生成头像\n        role: user.role_name || getRoleNameById(user.role_id)  // 添加角色信息\n      }))\n      console.log('获取到的用户列表:', users.value)\n    } else {\n      // 处理API返回错误，添加一些默认数据用于展示\n      users.value = [\n        { id: '1', name: '系统管理员', avatar: getAvatarUrl('系统管理员'), role: '管理员' },\n        { id: '2', name: '技术支持', avatar: getAvatarUrl('技术支持'), role: '技术人员' }\n      ]\n      console.warn('获取用户列表返回数据格式不符，使用默认数据', res.data)\n    }\n  } catch (error) {\n    console.error('获取用户列表失败:', error)\n    ElMessage.error('获取用户列表失败，将使用默认数据')\n    // 加载失败时提供默认数据\n    users.value = [\n      { id: '1', name: '系统管理员', avatar: getAvatarUrl('系统管理员'), role: '管理员' },\n      { id: '2', name: '技术支持', avatar: getAvatarUrl('技术支持'), role: '技术人员' }\n    ]\n  }\n}\n\n// 根据角色ID获取角色名称\nconst getRoleNameById = (roleId: string | number) => {\n  const roleMap = {\n    '1': '管理员',\n    '2': '普通用户',\n    '3': '技术人员'\n  }\n  return roleMap[roleId] || '用户'\n}\n\n// 获取问题列表\nconst fetchIssues = async () => {\n  loading.value = true\n  try {\n    const res = await getIssueList({\n      page: currentPage.value,\n      pageSize: pageSize.value,\n      status: statusFilter.value as IssueStatus,\n      keyword: searchQuery.value\n    })\n    if (res.data && res.data.data) {\n      // 兼容两种可能的API返回格式\n      if (res.data.data.items) {\n        // 新的API格式\n        issues.value = res.data.data.items\n        total.value = res.data.data.total\n        currentPage.value = res.data.data.currentPage\n        hasMore.value = res.data.data.items.length === pageSize.value\n      } else if (Array.isArray(res.data.data)) {\n        // 旧的API格式，直接返回数组\n        issues.value = res.data.data\n        hasMore.value = res.data.data.length === pageSize.value\n      } else {\n        issues.value = []\n        hasMore.value = false\n      }\n    } else {\n      issues.value = []\n      hasMore.value = false\n    }\n  } catch (error) {\n    console.error('获取问题列表失败:', error)\n    ElMessage.error('获取问题列表失败')\n    issues.value = []\n    hasMore.value = false\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取问题详情\nconst fetchIssueDetail = async (id: string) => {\n  loadingDetail.value = true\n  try {\n    const res = await getIssueDetail(id)\n    currentIssue.value = res.data.data\n  } catch (error) {\n    console.error('获取问题详情失败:', error)\n    ElMessage.error('获取问题详情失败')\n    drawerVisible.value = false\n  } finally {\n    loadingDetail.value = false\n  }\n}\n\n// 判断截止日期是否临近(7天内)\nconst isDeadlineNear = (deadline) => {\n  if (!deadline) return false\n  \n  const deadlineDate = new Date(deadline)\n  const today = new Date()\n  const diffTime = deadlineDate.getTime() - today.getTime()\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n  \n  return diffDays >= 0 && diffDays <= 7\n}\n\n// 修改截止日期显示函数\nconst formatDatetime = (date) => {\n  if (!date) return '未设置'\n  \n  const dateObj = new Date(date)\n  // 如果日期无效，返回原始值\n  if (isNaN(dateObj.getTime())) return date\n  \n  const year = dateObj.getFullYear()\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0')\n  const day = String(dateObj.getDate()).padStart(2, '0')\n  const hours = String(dateObj.getHours()).padStart(2, '0')\n  const minutes = String(dateObj.getMinutes()).padStart(2, '0')\n  \n  return `${year}-${month}-${day} ${hours}:${minutes}`\n}\n\n// 获取状态标签类型\nconst getStatusType = (status) => {\n  const typeMap = {\n    pending: 'info',\n    processing: 'warning',\n    completed: 'success'\n  }\n  return typeMap[status] || 'info'\n}\n\n// 获取状态标签文本\nconst getStatusLabel = (status) => {\n  const labelMap = {\n    pending: '待处理',\n    processing: '处理中',\n    completed: '已完成'\n  }\n  return labelMap[status] || status\n}\n\n// 获取优先级标签类型\nconst getPriorityType = (priority) => {\n  const typeMap = {\n    high: 'danger',\n    medium: 'warning',\n    low: 'info'\n  }\n  return typeMap[priority] || 'info'\n}\n\n// 获取优先级标签文本\nconst getPriorityLabel = (priority) => {\n  const labelMap = {\n    high: '高优先级',\n    medium: '中优先级',\n    low: '低优先级'\n  }\n  return labelMap[priority] || priority\n}\n\n// 获取用户头像URL（使用开源API生成头像）\nconst getAvatarUrl = (name: string) => {\n  return `https://api.dicebear.com/7.x/avataaars/svg?seed=${encodeURIComponent(name || 'default')}`\n}\n\n// 事件处理\nconst handleSearch = () => {\n  resetLoadMore()\n  fetchIssues()\n}\n\nconst handlePageChange = (page: number) => {\n  currentPage.value = page\n  fetchIssues()\n}\n\nconst handleCreateIssue = () => {\n  createDialogVisible.value = true\n}\n\nconst openDrawer = (issue: IssueItem) => {\n  fetchIssueDetail(issue.id)\n  drawerVisible.value = true\n}\n\nconst handleCloseIssue = () => {\n  drawerVisible.value = false\n}\n\nconst addRecord = async () => {\n  if (!currentIssue.value || !newRecordContent.value || !newRecordStatus.value) return\n\n  addingRecord.value = true\n  try {\n    const res = await addIssueRecord(currentIssue.value.id, {\n      content: newRecordContent.value,\n      newStatus: newRecordStatus.value as IssueStatus\n    })\n\n    // 更新本地状态\n    if (currentIssue.value) {\n      currentIssue.value.status = newRecordStatus.value as IssueStatus\n    }\n\n    // 重新获取问题详情以确保数据一致\n    await fetchIssueDetail(currentIssue.value.id)\n    \n    // 清空输入\n    newRecordContent.value = ''\n    newRecordStatus.value = ''\n    \n    ElMessage.success('添加处理记录成功')\n  } catch (error) {\n    console.error('添加处理记录失败:', error)\n    ElMessage.error('添加处理记录失败')\n  } finally {\n    addingRecord.value = false\n  }\n}\n\n// 提交新问题\nconst submitNewIssue = async () => {\n  if (!createFormRef.value) return\n  \n  createFormRef.value.validate(async (valid) => {\n    if (valid) {\n      submitting.value = true\n      try {\n        // 确保截止日期格式正确\n        let formattedDeadline = newIssue.value.deadline\n        if (formattedDeadline && typeof formattedDeadline === 'object') {\n          formattedDeadline = formatDatetime(formattedDeadline)\n        }\n        \n        await createIssue({\n          title: newIssue.value.title,\n          priority: newIssue.value.priority as 'high' | 'medium' | 'low',\n          status: 'pending', // 固定为待处理状态\n          description: newIssue.value.description,\n          deadline: formattedDeadline,\n          assigneeId: newIssue.value.assignee\n        })\n        \n        // 重新加载问题列表\n        fetchIssues()\n        \n        // 重置表单并关闭弹窗\n        createFormRef.value?.resetFields()\n        createDialogVisible.value = false\n        \n        ElMessage.success('创建问题成功')\n      } catch (error) {\n        console.error('创建问题失败:', error)\n        ElMessage.error('创建问题失败')\n      } finally {\n        submitting.value = false\n      }\n    }\n  })\n}\n\n// 滚动加载处理函数\nconst handleScroll = async (e: Event) => {\n  const target = e.target as HTMLElement\n  const scrollHeight = target.scrollHeight\n  const scrollTop = target.scrollTop\n  const clientHeight = target.clientHeight\n  \n  // 距离底部100px时开始加载\n  if (scrollHeight - scrollTop - clientHeight < 100 && hasMore.value && !loadingMore.value) {\n    loadingMore.value = true\n    currentPage.value++\n    \n    try {\n      const res = await getIssueList({\n        page: currentPage.value,\n        pageSize: pageSize.value,\n        status: statusFilter.value as IssueStatus,\n        keyword: searchQuery.value\n      })\n      \n      if (res.data && res.data.data) {\n        // 兼容两种可能的API返回格式\n        if (res.data.data.items && res.data.data.items.length > 0) {\n          // 新的API格式\n          issues.value.push(...res.data.data.items)\n          hasMore.value = res.data.data.items.length === pageSize.value\n        } else if (Array.isArray(res.data.data) && res.data.data.length > 0) {\n          // 旧的API格式，直接返回数组\n          issues.value.push(...res.data.data)\n          hasMore.value = res.data.data.length === pageSize.value\n        } else {\n          hasMore.value = false\n        }\n      } else {\n        hasMore.value = false\n      }\n    } catch (error) {\n      console.error('加载更多失败:', error)\n      hasMore.value = false\n    } finally {\n      loadingMore.value = false\n    }\n  }\n}\n\n// 重置加载状态\nconst resetLoadMore = () => {\n  currentPage.value = 1\n  hasMore.value = true\n  loadingMore.value = false\n  issues.value = []\n}\n\nonMounted(() => {\n  console.log('当前登录用户信息:', userStore.userInfo)\n  fetchUsers()\n  fetchIssues()\n  \n  // 添加容器滚动事件监听\n  const container = document.querySelector('.app-container')\n  if (container) {\n    container.addEventListener('scroll', handleScroll)\n  }\n})\n\n// 组件卸载时移除滚动事件监听\nonUnmounted(() => {\n  const container = document.querySelector('.app-container')\n  if (container) {\n    container.removeEventListener('scroll', handleScroll)\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.app-container {\n  padding: 24px;\n  background-color: #f0f2f5;\n  min-height: 100vh;\n}\n\n.search-area {\n  margin-bottom: 24px;\n  background-color: #ffffff;\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);\n  \n  .flex {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n  }\n  \n  .el-input,\n  .el-select,\n  .el-button {\n    height: 40px;\n    border-radius: 4px;\n  }\n  \n  .el-input {\n    flex: 1;\n    max-width: 260px;\n    \n    :deep(.el-input__wrapper) {\n      box-shadow: 0 0 0 1px #e5e7eb inset;\n      padding: 0 12px;\n    }\n  }\n  \n  .el-select {\n    width: 150px;\n    \n    :deep(.el-input__wrapper) {\n      box-shadow: 0 0 0 1px #e5e7eb inset;\n      padding: 0 12px;\n    }\n  }\n  \n  .el-button {\n    min-width: 100px;\n    padding: 0 16px;\n    font-size: 14px;\n  }\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 24px;\n}\n\n.issue-card {\n  border: 1px solid #e5e7eb;\n  background-color: #ffffff;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  border-radius: 12px;\n  overflow: hidden;\n  height: auto;\n  min-height: 260px;\n  display: flex;\n  flex-direction: column;\n  transition: all 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 4px 10px -1px rgba(0, 0, 0, 0.1), 0 2px 6px -1px rgba(0, 0, 0, 0.06);\n    transform: translateY(-3px);\n  }\n\n  .issue-card-content {\n    padding: 24px;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .issue-card-header {\n    margin-bottom: 16px;\n    \n    .issue-id {\n      display: inline-block;\n      font-family: 'Roboto Mono', monospace;\n      color: #6b7280;\n      font-size: 13px;\n      padding: 4px 8px;\n      background: #f3f4f6;\n      border-radius: 4px;\n      margin-bottom: 8px;\n    }\n\n    .issue-card-title {\n      font-size: 16px;\n      font-weight: 600;\n      color: #1f2937;\n      margin: 0 0 12px 0;\n      line-height: 1.4;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .tags-group {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 8px;\n      \n      .el-tag {\n        padding: 0 10px;\n        height: 24px;\n        line-height: 22px;\n        font-size: 12px;\n        font-weight: 500;\n        \n        &.priority-tag {\n          background-color: var(--el-color-danger-light-9);\n          border-color: var(--el-color-danger-light-7);\n          color: var(--el-color-danger);\n          \n          &.el-tag--warning {\n            background-color: var(--el-color-warning-light-9);\n            border-color: var(--el-color-warning-light-7);\n            color: var(--el-color-warning);\n          }\n          \n          &.el-tag--info {\n            background-color: var(--el-color-info-light-9);\n            border-color: var(--el-color-info-light-7);\n            color: var(--el-color-info);\n          }\n        }\n        \n        &.status-tag {\n          background-color: var(--el-color-success-light-9);\n          border-color: var(--el-color-success-light-7);\n          color: var(--el-color-success);\n        }\n      }\n    }\n  }\n\n  .time-section {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin-bottom: 16px;\n    \n    .time-tag {\n      display: flex;\n      align-items: center;\n      font-size: 13px;\n      color: #6b7280;\n      background-color: #f9fafb;\n      padding: 8px 12px;\n      border-radius: 6px;\n      border-left: 3px solid #909399;\n    }\n    \n    .create-time {\n      border-left-color: #909399;\n      background-color: #f9fafb;\n    }\n    \n    .deadline-tag {\n      border-left-color: #909399;\n      \n      &.deadline-near {\n        color: #f56c6c;\n        font-weight: 500;\n        background-color: #fff8f8;\n        border-left-color: #f56c6c;\n      }\n    }\n  }\n\n  .deadline-section {\n    display: none; /* 隐藏原来的截止时间区域，因为已经合并到time-section中 */\n  }\n\n  .assignee-section {\n    margin-top: auto;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    .el-avatar {\n      border: 2px solid #fff;\n    }\n\n    span {\n      line-height: 28px;\n    }\n  }\n}\n\n.el-tag {\n  font-size: 12px;\n  padding: 0 10px;\n  height: 22px;\n  line-height: 20px;\n  border-radius: 11px;\n  font-weight: 500;\n  margin: 0;\n  display: inline-flex;\n  align-items: center;\n\n  &.el-tag--danger {\n    background-color: #fff2f0;\n    border-color: #ffccc7;\n    color: #f5222d;\n  }\n\n  &.el-tag--warning {\n    background-color: #fffbe6;\n    border-color: #ffe58f;\n    color: #faad14;\n  }\n\n  &.el-tag--info {\n    background-color: #f5f5f5;\n    border-color: #e5e7eb;\n    color: #6b7280;\n  }\n\n  &.el-tag--success {\n    background-color: #f6ffed;\n    border-color: #b7eb8f;\n    color: #52c41a;\n  }\n}\n\n.el-drawer__header {\n  margin-bottom: 0;\n  padding: 20px 24px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.el-drawer__body {\n  padding: 0;\n  background-color: #ffffff;\n}\n\n.bg-gray-50 {\n  background-color: #ffffff;\n  border-radius: 12px;\n  border: 1px solid #e5e7eb;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.06);\n  margin: 24px;\n}\n\n.record-content {\n  :deep(p) {\n    margin-bottom: 0.75rem;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  \n  :deep(ul), :deep(ol) {\n    padding-left: 1.5rem;\n    margin-bottom: 0.75rem;\n  }\n  \n  :deep(ul) {\n    list-style-type: disc;\n  }\n  \n  :deep(ol) {\n    list-style-type: decimal;\n  }\n  \n  :deep(li) {\n    margin-bottom: 0.25rem;\n  }\n}\n\n.add-record-section {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 24px;\n  border: 1px solid #e5e7eb;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  \n  .label-required {\n    font-size: 14px;\n    font-weight: 500;\n    color: #374151;\n    position: relative;\n    \n    &::before {\n      content: \"*\";\n      color: #f56c6c;\n      margin-right: 4px;\n    }\n  }\n  \n  .status-selector {\n    max-width: 300px;\n  }\n  \n  .el-select {\n    width: 100%;\n  }\n}\n\n// 状态流程样式\n.status-flow-section {\n  margin-bottom: 16px;\n  \n  .status-flow {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    background-color: #f9fafb;\n    border-radius: 12px;\n    border: 1px solid #e5e7eb;\n    position: relative;\n    overflow: hidden;\n    \n    &::before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      bottom: 0;\n      width: 4px;\n    }\n    \n    &.flow-pending::before {\n      background-color: #ef4444;\n    }\n    \n    &.flow-processing::before {\n      background-color: #3b82f6;\n    }\n    \n    &.flow-completed::before {\n      background-color: #10b981;\n    }\n  }\n  \n  .status-step {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    z-index: 2;\n    transition: all 0.3s ease;\n    padding: 8px 12px;\n    border-radius: 8px;\n    \n    .status-dot {\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background-color: #e5e7eb;\n      border: 2px solid #f9fafb;\n      z-index: 1;\n      transition: all 0.3s ease;\n    }\n    \n    .status-text {\n      font-size: 11px;\n      color: #9ca3af;\n      margin-top: 4px;\n      white-space: nowrap;\n      transition: all 0.3s ease;\n    }\n    \n    &.status-completed {\n      .status-dot {\n        background-color: #10b981;\n        border-color: #d1fae5;\n      }\n      \n      .status-text {\n        color: #10b981;\n      }\n    }\n    \n    &.status-pending {\n      .status-dot {\n        background-color: #ef4444;\n        border-color: #fee2e2;\n      }\n      \n      .status-text {\n        color: #ef4444;\n      }\n    }\n    \n    &.status-current {\n      transform: scale(1.15);\n      background-color: white;\n      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\n      \n      .status-dot {\n        width: 16px;\n        height: 16px;\n        background-color: #3b82f6;\n        border-color: #dbeafe;\n        border-width: 3px;\n        box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);\n      }\n      \n      .status-text {\n        color: #3b82f6;\n        font-weight: 600;\n        font-size: 12px;\n      }\n      \n      &.status-pending {\n        .status-dot {\n          background-color: #ef4444;\n          border-color: #fee2e2;\n          box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.2);\n        }\n        \n        .status-text {\n          color: #ef4444;\n          font-weight: 600;\n        }\n      }\n      \n      &::after {\n        content: '';\n        position: absolute;\n        bottom: -2px;\n        left: 50%;\n        transform: translateX(-50%) rotate(45deg);\n        width: 8px;\n        height: 8px;\n        background-color: white;\n        border-radius: 0;\n      }\n    }\n  }\n  \n  .status-line {\n    flex: 1;\n    height: 2px;\n    background-color: #e5e7eb;\n    margin: 0 2px;\n    position: relative;\n    top: -6px;\n    transition: all 0.3s ease;\n    \n    // 进度处理中时，第一段线为完成状态\n    .flow-processing & {\n      &:first-of-type {\n        background-color: #3b82f6;\n        height: 3px;\n      }\n    }\n    \n    // 进度完成时，所有线都为完成状态\n    .flow-completed & {\n      background-color: #10b981;\n      height: 3px;\n    }\n  }\n}\n\n// 用户选择样式\n:deep(.user-option) {\n  display: flex;\n  align-items: center;\n  padding: 2px 0;\n  \n  .user-avatar {\n    margin-right: 8px;\n    border: 1px solid #f0f0f0;\n  }\n  \n  .user-name {\n    font-size: 14px;\n    line-height: 26px;\n  }\n  \n  .user-role {\n    padding-left: 8px;\n    color: #909399;\n  }\n}\n\n:deep(.el-select-dropdown__item.selected) {\n  .user-option {\n    .user-avatar {\n      border-color: #409eff;\n    }\n    \n    .user-name {\n      color: #409eff;\n      font-weight: 500;\n    }\n  }\n}\n\n// 用户信息区域样式 - 修改为单行展示\n.users-section {\n  margin-top: auto;\n  \n  .users-row {\n    display: flex;\n    justify-content: space-between;\n    gap: 10px;\n    padding-top: 8px;\n    border-top: 1px dashed #e5e7eb;\n  }\n  \n  .user-cell {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    \n    .user-label {\n      color: #6b7280;\n      font-size: 12px;\n      margin-bottom: 4px;\n    }\n    \n    .user-info {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      \n      .user-avatar {\n        border: 1px solid #f0f0f0;\n      }\n      \n      .user-name {\n        font-size: 14px;\n        color: #374151;\n        font-weight: 500;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-width: 100px;\n      }\n    }\n  }\n}\n\n// 详情抽屉样式\n.issue-detail {\n  background-color: #f0f2f5;\n  \n  .info-card {\n    border: 1px solid #e5e7eb;\n    \n    .issue-number {\n      padding: 4px 8px;\n      background: #f3f4f6;\n      border-radius: 4px;\n      font-weight: 500;\n    }\n\n    .tags-row {\n      .tag-item {\n        display: flex;\n        flex-direction: column;\n        gap: 4px;\n        \n        .tag-label {\n          font-size: 13px;\n        }\n        \n        .el-tag {\n          margin: 0;\n          height: 32px;\n          line-height: 30px;\n          padding: 0 16px;\n          font-size: 14px;\n          font-weight: 500;\n          \n          &.priority-tag {\n            min-width: 90px;\n            text-align: center;\n          }\n          \n          &.status-tag {\n            min-width: 80px;\n            text-align: center;\n          }\n        }\n      }\n    }\n    \n    .issue-timeline {\n      display: flex;\n      align-items: center;\n      gap: 24px;\n      padding: 16px;\n      background-color: #f9fafb;\n      border-radius: 8px;\n      \n      .timeline-item {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n        \n        .timeline-icon {\n          font-size: 20px;\n          color: #6b7280;\n        }\n        \n        .timeline-content {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n      }\n      \n      .timeline-divider {\n        width: 1px;\n        height: 40px;\n        background-color: #e5e7eb;\n      }\n    }\n    \n    .users-info {\n      margin-top: 24px;\n      padding-top: 24px;\n      border-top: 1px solid #f3f4f6;\n      \n      .user-box {\n        .user-role-label {\n          font-size: 13px;\n          color: #6b7280;\n          margin-bottom: 12px;\n          display: block;\n        }\n        \n        .user-detail {\n          display: flex;\n          align-items: center;\n          gap: 12px;\n          padding: 12px 16px;\n          background-color: #f9fafb;\n          border-radius: 12px;\n          border: 1px solid #f3f4f6;\n          \n          .el-avatar {\n            border: 2px solid white;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          }\n          \n          .user-info {\n            display: flex;\n            flex-direction: column;\n            gap: 2px;\n            \n            .user-name {\n              font-weight: 600;\n              color: #111827;\n              font-size: 15px;\n            }\n            \n            .user-role {\n              font-size: 12px;\n              color: #6b7280;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n.loading-more {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px 0;\n  color: #6b7280;\n  font-size: 14px;\n}\n\n.chat-records {\n  .chat-record-item {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  \n  .chat-bubble {\n    position: relative;\n    max-width: 85%;\n    margin-left: 0;\n    border-radius: 12px;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n    transition: all 0.3s ease;\n    \n    &:hover {\n      background-color: #f3f4f6;\n    }\n    \n    &::before {\n      content: '';\n      position: absolute;\n      left: -8px;\n      top: 12px;\n      width: 0;\n      height: 0;\n      border-style: solid;\n      border-width: 8px 8px 8px 0;\n      border-color: transparent #f3f4f6 transparent transparent;\n    }\n  }\n}\n\n.add-record-section {\n  border-top: 1px solid #e5e7eb;\n  padding-top: 1.5rem;\n  \n  .label-required::after {\n    content: '*';\n    color: #f56c6c;\n    margin-left: 4px;\n  }\n}\n</style>"],"names":["loading","ref","loadingDetail","submitting","addingRecord","currentPage","pageSize","total","loadingMore","hasMore","searchQuery","statusFilter","drawerVisible","currentIssue","newRecordContent","newRecordStatus","createDialogVisible","createFormRef","newIssue","formRules","users","issues","userStore","useUserStore","currentUserId","computed","_a","canAddRecord","currentId","creatorId","assigneeId","_b","isCreator","isAssignee","fetchUsers","res","getUserList","user","getAvatarUrl","getRoleNameById","error","ElMessage","roleId","fetchIssues","getIssueList","fetchIssueDetail","id","getIssueDetail","isDeadlineNear","deadline","deadlineDate","today","diffTime","diffDays","formatDatetime","date","dateObj","year","month","day","hours","minutes","getStatusType","status","getStatusLabel","getPriorityType","priority","getPriorityLabel","name","handleSearch","resetLoadMore","handleCreateIssue","openDrawer","issue","handleCloseIssue","addRecord","addIssueRecord","submitNewIssue","valid","formattedDeadline","createIssue","handleScroll","e","target","scrollHeight","scrollTop","clientHeight","onMounted","container","onUnmounted"],"mappings":"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"}