{"version":3,"file":"index-9wIjZu-d.js","sources":["../../src/layout/components/Sidebar.vue","../../src/layout/components/Header.vue","../../src/layout/index.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar-container\">\n    <el-scrollbar>\n      <el-menu\n        :default-active=\"route.path\"\n        :collapse=\"collapsed\"\n        :unique-opened=\"true\"\n        :collapse-transition=\"false\"\n        class=\"el-menu-vertical\"\n        background-color=\"#34495e\"\n        text-color=\"#b8c7ce\"\n        active-text-color=\"#ffffff\"\n        router\n      >\n        <template v-for=\"menu in userStore.userInfo?.menus\" :key=\"menu.id\">\n          <el-menu-item :index=\"menu.path\">\n            <el-icon>\n              <component :is=\"menu.icon\" />\n            </el-icon>\n            <template #title>\n              <span>{{ menu.name }}</span>\n            </template>\n          </el-menu-item>\n        </template>\n      </el-menu>\n    </el-scrollbar>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRoute } from 'vue-router'\nimport { useUserStore } from '@/stores/user'\nimport type { Menu } from '@/types/user'\n\ndefineProps<{\n  collapsed: boolean\n}>()\n\nconst route = useRoute()\nconst userStore = useUserStore()\n</script>\n\n<style lang=\"scss\" scoped>\n.sidebar-container {\n  height: 100%;\n  background-color: #34495e;\n\n  .el-menu-vertical {\n    border-right: none;\n\n    &:not(.el-menu--collapse) {\n      width: 200px;\n    }\n  }\n\n  :deep(.el-menu-item) {\n    &.is-active {\n      background-color: #2c3e50;\n    }\n\n    &:hover {\n      background-color: #2c3e50;\n    }\n  }\n\n  :deep(.el-scrollbar__wrap) {\n    overflow-x: hidden;\n  }\n}\n</style> ","<template>\n  <div class=\"main-header\">\n    <div class=\"left\">\n      <h1 class=\"logo\">文知管理系统</h1>\n    </div>\n    <div class=\"right\">\n      <el-dropdown trigger=\"click\">\n        <div class=\"user-info\">\n          <el-avatar \n            :size=\"32\" \n            :icon=\"UserFilled\"\n            class=\"user-avatar\"\n          />\n          <span class=\"username\">{{ userStore.userInfo?.username }}</span>\n          <el-icon class=\"el-icon--right\">\n            <CaretBottom />\n          </el-icon>\n        </div>\n        <template #dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item @click=\"handleProfile\">\n              <el-icon><User /></el-icon>\n              <span>个人中心</span>\n            </el-dropdown-item>\n            <el-dropdown-item divided @click=\"handleLogout\">\n              <el-icon><SwitchButton /></el-icon>\n              <span>退出登录</span>\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { useUserStore } from '@/stores/user'\nimport { useRouter } from 'vue-router'\nimport { ElMessageBox } from 'element-plus'\nimport { \n  Fold, \n  Expand, \n  UserFilled, \n  CaretBottom,\n  User,\n  SwitchButton\n} from '@element-plus/icons-vue'\n\ninterface Props {\n  collapsed: boolean\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<{\n  'update:collapsed': [value: boolean]\n}>()\n\nconst userStore = useUserStore()\nconst router = useRouter()\n\nconst toggleSidebar = () => {\n  emit('update:collapsed', !props.collapsed)\n}\n\nconst handleProfile = () => {\n  router.push('/profile')\n}\n\nconst handleLogout = async () => {\n  try {\n    await ElMessageBox.confirm('确认退出登录吗？', '提示', {\n      type: 'warning'\n    })\n    userStore.clearAuth()\n    router.push('/login')\n  } catch {\n    // 用户取消退出\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.main-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n  width: 100%;\n  padding: 0 20px;\n\n  .left {\n    .logo {\n      margin: 0;\n      font-size: 18px;\n      font-weight: 600;\n      color: #ffffff;\n    }\n  }\n\n  .right {\n    .user-info {\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      padding: 4px 8px;\n      border-radius: 4px;\n      transition: background-color 0.3s;\n\n      &:hover {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .user-avatar {\n        background: #1890ff;\n        margin-right: 8px;\n      }\n\n      .username {\n        font-size: 14px;\n        margin-right: 4px;\n        color: #ffffff;\n      }\n\n      .el-icon--right {\n        color: #ffffff;\n      }\n    }\n  }\n}\n</style> ","<template>\n  <div class=\"app-wrapper\">\n    <el-container class=\"layout-container\">\n      <el-header class=\"header\">\n        <Header :collapsed=\"collapsed\" @update:collapsed=\"collapsed = $event\" />\n      </el-header>\n      <el-container class=\"main-container\">\n        <el-aside :width=\"collapsed ? '64px' : '200px'\" class=\"aside\">\n          <Sidebar :collapsed=\"collapsed\" />\n        </el-aside>\n        <el-main class=\"app-main\">\n          <router-view />\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport Sidebar from './components/Sidebar.vue'\nimport Header from './components/Header.vue'\n\nconst collapsed = ref(false)\n</script>\n\n<style lang=\"scss\" scoped>\n.app-wrapper {\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  overflow: hidden; /* 防止外层滚动 */\n}\n\n.main-container {\n  height: 100vh;\n  transition: margin-left 0.3s;\n  position: relative;\n  overflow: hidden; /* 防止外层滚动 */\n  \n  .app-main {\n    height: calc(100vh - 50px); /* 减去头部高度 */\n    overflow: auto; /* 内容区域滚动 */\n    padding: 0;\n    position: relative;\n  }\n}\n\n.layout-container {\n  height: 100vh;\n\n  .header {\n    padding: 0;\n    height: 60px;\n    background-color: #2c3e50;\n    border-bottom: 1px solid #34495e;\n  }\n\n  .aside {\n    background-color: #34495e;\n    transition: width 0.3s;\n    overflow: hidden;\n  }\n\n  .main {\n    background-color: #f5f8fa;\n    padding: 20px;\n  }\n}\n</style> "],"names":["route","useRoute","userStore","useUserStore","router","useRouter","handleProfile","handleLogout","ElMessageBox","collapsed","ref"],"mappings":"sVAsCA,MAAMA,EAAQC,EAAS,EACjBC,EAAYC,EAAa,s4BCmB/B,MAAMD,EAAYC,EAAa,EACzBC,EAASC,EAAU,EAMnBC,EAAgB,IAAM,CAC1BF,EAAO,KAAK,UAAU,CACxB,EAEMG,EAAe,SAAY,CAC3B,GAAA,CACI,MAAAC,EAAa,QAAQ,WAAY,KAAM,CAC3C,KAAM,SAAA,CACP,EACDN,EAAU,UAAU,EACpBE,EAAO,KAAK,QAAQ,CAAA,MACd,CAAA,CAGV,o3BCxDM,MAAAK,EAAYC,EAAI,EAAK"}