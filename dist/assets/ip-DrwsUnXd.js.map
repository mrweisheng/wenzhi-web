{"version":3,"file":"ip-DrwsUnXd.js","sources":["../../src/api/writer.ts","../../src/utils/ip.ts"],"sourcesContent":["import request from '@/utils/request'\r\nimport type { WriterForm, WriterQuery } from '@/types/writer'\r\n\r\n// 获取写手列表\r\nexport function getWriters(params?: WriterQuery) {\r\n  return request({\r\n    url: '/api/writers',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 获取写手详情\r\nexport function getWriter(id: number) {\r\n  return request({\r\n    url: `/writers/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 新增写手\r\nexport function createWriter(data: WriterForm) {\r\n  return request({\r\n    url: '/api/writers',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新写手\r\nexport function updateWriter(id: number, data: Partial<WriterForm>) {\r\n  return request({\r\n    url: `/writers/${id}`,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除写手\r\nexport function deleteWriter(id: number) {\r\n  return request({\r\n    url: `/writers/${id}`,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 批量删除写手\r\nexport function batchDeleteWriters(ids: number[]) {\r\n  return request({\r\n    url: '/writers',\r\n    method: 'delete',\r\n    data: { ids }\r\n  })\r\n}\r\n\r\n// 写手申请\r\nexport function applyWriter(data: WriterForm) {\r\n  return request({\r\n    url: '/writer/apply',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 生成写手申请临时令牌\r\nexport function generateApplicationToken() {\r\n  // 简单生成一个临时令牌\r\n  const token = `apply_${Date.now()}`\r\n  return Promise.resolve({ data: { token } })\r\n} ","// 新建 IP 获取工具函数\r\nexport async function getClientIp(): Promise<string> {\r\n  try {\r\n    const response = await fetch('https://api.ipify.org?format=json')\r\n    const data = await response.json()\r\n    return data.ip\r\n  } catch (error) {\r\n    console.error('获取IP地址失败:', error)\r\n    return ''\r\n  }\r\n} "],"names":["getWriters","params","request","getWriter","id","createWriter","data","updateWriter","deleteWriter","batchDeleteWriters","ids","generateApplicationToken","token","getClientIp","error"],"mappings":"wCAIO,SAASA,EAAWC,EAAsB,CAC/C,OAAOC,EAAQ,CACb,IAAK,eACL,OAAQ,MACR,OAAAD,CAAA,CACD,CACH,CAGO,SAASE,EAAUC,EAAY,CACpC,OAAOF,EAAQ,CACb,IAAK,YAAYE,CAAE,GACnB,OAAQ,KAAA,CACT,CACH,CAGO,SAASC,EAAaC,EAAkB,CAC7C,OAAOJ,EAAQ,CACb,IAAK,eACL,OAAQ,OACR,KAAAI,CAAA,CACD,CACH,CAGgB,SAAAC,EAAaH,EAAYE,EAA2B,CAClE,OAAOJ,EAAQ,CACb,IAAK,YAAYE,CAAE,GACnB,OAAQ,MACR,KAAAE,CAAA,CACD,CACH,CAGO,SAASE,EAAaJ,EAAY,CACvC,OAAOF,EAAQ,CACb,IAAK,YAAYE,CAAE,GACnB,OAAQ,QAAA,CACT,CACH,CAGO,SAASK,EAAmBC,EAAe,CAChD,OAAOR,EAAQ,CACb,IAAK,WACL,OAAQ,SACR,KAAM,CAAE,IAAAQ,CAAI,CAAA,CACb,CACH,CAYO,SAASC,GAA2B,CAEzC,MAAMC,EAAQ,SAAS,KAAK,IAAK,CAAA,GACjC,OAAO,QAAQ,QAAQ,CAAE,KAAM,CAAE,MAAAA,GAAS,CAC5C,CCpEA,eAAsBC,GAA+B,CAC/C,GAAA,CAGF,OADa,MADI,MAAM,MAAM,mCAAmC,GACpC,KAAK,GACrB,SACLC,EAAO,CACN,eAAA,MAAM,YAAaA,CAAK,EACzB,EAAA,CAEX"}