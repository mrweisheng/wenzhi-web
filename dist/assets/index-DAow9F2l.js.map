{"version":3,"file":"index-DAow9F2l.js","sources":["../../src/components/IconSelect/index.vue","../../src/views/system/menus/index.vue"],"sourcesContent":["<template>\r\n  <el-popover\r\n    placement=\"bottom\"\r\n    :width=\"300\"\r\n    trigger=\"click\"\r\n    popper-class=\"icon-select-popover\"\r\n  >\r\n    <template #reference>\r\n      <el-input\r\n        v-model=\"selectedIcon\"\r\n        placeholder=\"点击选择图标\"\r\n        readonly\r\n        :suffix-icon=\"selectedIcon ? resolveIcon(selectedIcon) : ''\"\r\n      />\r\n    </template>\r\n    \r\n    <div class=\"icon-list\">\r\n      <div\r\n        v-for=\"icon in iconList\"\r\n        :key=\"icon\"\r\n        class=\"icon-item\"\r\n        @click=\"handleSelect(icon)\"\r\n      >\r\n        <el-icon>\r\n          <component :is=\"icon\" />\r\n        </el-icon>\r\n        <span class=\"icon-name\">{{ icon }}</span>\r\n      </div>\r\n    </div>\r\n  </el-popover>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue'\r\nimport * as Icons from '@element-plus/icons-vue'\r\n\r\nconst props = defineProps<{\r\n  modelValue: string\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'update:modelValue', value: string): void\r\n}>()\r\n\r\nconst selectedIcon = computed({\r\n  get: () => props.modelValue,\r\n  set: (value) => emit('update:modelValue', value)\r\n})\r\n\r\n// 获取所有图标\r\nconst iconList = Object.keys(Icons)\r\n\r\n// 解析图标组件\r\nconst resolveIcon = (name: string) => {\r\n  return Icons[name as keyof typeof Icons]\r\n}\r\n\r\n// 选择图标\r\nconst handleSelect = (icon: string) => {\r\n  selectedIcon.value = icon\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.icon-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 8px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  padding: 8px;\r\n}\r\n\r\n.icon-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n  \r\n  &:hover {\r\n    background-color: #f5f7fa;\r\n  }\r\n  \r\n  .el-icon {\r\n    font-size: 20px;\r\n    margin-bottom: 4px;\r\n  }\r\n  \r\n  .icon-name {\r\n    font-size: 12px;\r\n    color: #606266;\r\n    text-align: center;\r\n    word-break: break-all;\r\n  }\r\n}\r\n\r\n:deep(.icon-select-popover) {\r\n  padding: 0;\r\n  \r\n  .el-popover__title {\r\n    margin: 0;\r\n    padding: 8px;\r\n    border-bottom: 1px solid #dcdfe6;\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"toolbar\">\r\n      <el-button type=\"primary\" @click=\"handleAdd\">新增菜单</el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"menuList\"\r\n      style=\"width: 100%\"\r\n      row-key=\"id\"\r\n      :tree-props=\"{ children: 'children' }\"\r\n    >\r\n      <el-table-column prop=\"name\" label=\"菜单名称\" />\r\n      <el-table-column prop=\"path\" label=\"路由路径\" />\r\n      <el-table-column prop=\"icon\" label=\"图标\" />\r\n      <el-table-column prop=\"sort\" label=\"排序\" width=\"80\" />\r\n      <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n        <template #default=\"{ row }\">\r\n          <el-button type=\"primary\" link @click=\"handleEdit(row)\">编辑</el-button>\r\n          <el-button type=\"danger\" link @click=\"handleDelete(row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 菜单表单对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      v-model=\"dialogVisible\"\r\n      width=\"500px\"\r\n      @close=\"resetForm\"\r\n    >\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"menuForm\"\r\n        :rules=\"rules\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"上级菜单\" v-if=\"!menuForm.id\">\r\n          <el-tree-select\r\n            v-model=\"menuForm.parent_id\"\r\n            :data=\"menuList\"\r\n            :props=\"{ label: 'name', value: 'id', children: 'children' }\"\r\n            placeholder=\"请选择上级菜单\"\r\n            clearable\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"菜单名称\" prop=\"name\">\r\n          <el-input v-model=\"menuForm.name\" placeholder=\"请输入菜单名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"路由路径\" prop=\"path\">\r\n          <el-input \r\n            v-model=\"menuForm.path\" \r\n            placeholder=\"请输入路由路径\"\r\n            :disabled=\"!!menuForm.id\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"图标\" prop=\"icon\">\r\n          <icon-select v-model=\"menuForm.icon\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"排序\" prop=\"sort\">\r\n          <el-input-number v-model=\"menuForm.sort\" :min=\"0\" :max=\"99\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\r\n          确定\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport type { FormInstance, FormRules } from 'element-plus'\r\nimport { getMenus, createMenu, updateMenu, deleteMenu } from '@/api/menu'\r\nimport type { Menu, MenuForm } from '@/types/menu'\r\nimport { useUserStore } from '@/stores/user'\r\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue'\r\nimport IconSelect from '@/components/IconSelect/index.vue'\r\n\r\nconst loading = ref(false)\r\nconst menuList = ref<Menu[]>([])\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst submitting = ref(false)\r\n\r\nconst formRef = ref<FormInstance>()\r\nconst menuForm = ref<MenuForm>({\r\n  name: '',\r\n  path: '',\r\n  icon: '',\r\n  sort: 0,\r\n  parent_id: null\r\n})\r\n\r\nconst rules: FormRules = {\r\n  name: [\r\n    { required: true, message: '请输入菜单名称', trigger: 'blur' }\r\n  ],\r\n  path: [\r\n    { required: true, message: '请输入路由路径', trigger: 'blur' }\r\n  ],\r\n  icon: [\r\n    { required: true, message: '请输入图标名称', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 在 setup 中获取 store\r\nconst userStore = useUserStore()\r\n\r\n// 获取菜单列表\r\nconst getMenuList = async () => {\r\n  try {\r\n    loading.value = true\r\n    const res = await getMenus()\r\n    if (res.data && res.data.data) {\r\n      // 确保数据是数组\r\n      menuList.value = Array.isArray(res.data.data) ? res.data.data : []\r\n    }\r\n  } catch (error) {\r\n    console.error('获取菜单列表失败:', error)\r\n    ElMessage.error('获取菜单列表失败')\r\n    menuList.value = [] // 出错时设置为空数组\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 新增菜单\r\nconst handleAdd = () => {\r\n  dialogTitle.value = '新增菜单'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑菜单\r\nconst handleEdit = (row: Menu) => {\r\n  dialogTitle.value = '编辑菜单'\r\n  menuForm.value = { ...row }\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 删除菜单\r\nconst handleDelete = async (row: Menu) => {\r\n  try {\r\n    await ElMessageBox.confirm('确认删除该菜单吗？', '提示', {\r\n      type: 'warning'\r\n    })\r\n    \r\n    await deleteMenu(row.id)\r\n    ElMessage.success('删除成功')\r\n    // 删除成功后刷新菜单\r\n    await userStore.getUserInfoAction()\r\n    getMenuList()\r\n  } catch (error) {\r\n    console.error('Delete menu error:', error)\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate()\r\n  \r\n  try {\r\n    submitting.value = true\r\n    if (menuForm.value.id) {\r\n      const updateData = {\r\n        name: menuForm.value.name,\r\n        icon: menuForm.value.icon,\r\n        sort: menuForm.value.sort\r\n      }\r\n      await updateMenu(menuForm.value.id, updateData)\r\n      ElMessage.success('更新成功')\r\n      await userStore.getUserInfoAction()\r\n    } else {\r\n      await createMenu(menuForm.value)\r\n      ElMessage.success('创建成功')\r\n      await userStore.getUserInfoAction()\r\n    }\r\n    dialogVisible.value = false\r\n    getMenuList()\r\n  } catch (error) {\r\n    console.error('Submit menu error:', error)\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n// 重置表单\r\nconst resetForm = () => {\r\n  if (formRef.value) {\r\n    formRef.value.resetFields()\r\n  }\r\n  menuForm.value = {\r\n    name: '',\r\n    path: '',\r\n    icon: '',\r\n    sort: 0,\r\n    parent_id: null\r\n  }\r\n}\r\n\r\n// 判断是否可以上移\r\nconst canMoveUp = (row: Menu) => {\r\n  // 获取同级菜单\r\n  const siblings = menuList.value.filter(item => item.parent_id === row.parent_id)\r\n  const index = siblings.findIndex(item => item.id === row.id)\r\n  return index > 0\r\n}\r\n\r\n// 判断是否可以下移\r\nconst canMoveDown = (row: Menu) => {\r\n  const siblings = menuList.value.filter(item => item.parent_id === row.parent_id)\r\n  const index = siblings.findIndex(item => item.id === row.id)\r\n  return index < siblings.length - 1\r\n}\r\n\r\n// 上移\r\nconst handleMoveUp = async (row: Menu) => {\r\n  try {\r\n    const siblings = menuList.value.filter(item => item.parent_id === row.parent_id)\r\n    const index = siblings.findIndex(item => item.id === row.id)\r\n    const prevMenu = siblings[index - 1]\r\n    \r\n    // 交换排序值\r\n    const tempSort = row.sort\r\n    await updateMenu(row.id, { sort: prevMenu.sort })\r\n    await updateMenu(prevMenu.id, { sort: tempSort })\r\n    \r\n    // 刷新列表和侧边栏\r\n    getMenuList()\r\n    await userStore.getUserInfoAction()\r\n    ElMessage.success('排序更新成功')\r\n  } catch (error) {\r\n    console.error('Move menu error:', error)\r\n    ElMessage.error('排序更新失败')\r\n  }\r\n}\r\n\r\n// 下移\r\nconst handleMoveDown = async (row: Menu) => {\r\n  try {\r\n    const siblings = menuList.value.filter(item => item.parent_id === row.parent_id)\r\n    const index = siblings.findIndex(item => item.id === row.id)\r\n    const nextMenu = siblings[index + 1]\r\n    \r\n    // 交换排序值\r\n    const tempSort = row.sort\r\n    await updateMenu(row.id, { sort: nextMenu.sort })\r\n    await updateMenu(nextMenu.id, { sort: tempSort })\r\n    \r\n    // 刷新列表和侧边栏\r\n    getMenuList()\r\n    await userStore.getUserInfoAction()\r\n    ElMessage.success('排序更新成功')\r\n  } catch (error) {\r\n    console.error('Move menu error:', error)\r\n    ElMessage.error('排序更新失败')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  getMenuList()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n.toolbar {\r\n  padding: 10px 0;\r\n}\r\n\r\n.sort-column {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.sort-buttons {\r\n  display: flex;\r\n  gap: 4px;\r\n}\r\n\r\n/* 当按钮禁用时降低透明度 */\r\n.sort-buttons .el-button.is-disabled {\r\n  opacity: 0.5;\r\n}\r\n</style>"],"names":["props","__props","emit","__emit","selectedIcon","computed","value","iconList","Icons","resolveIcon","name","handleSelect","icon","loading","ref","menuList","dialogVisible","dialogTitle","submitting","formRef","menuForm","rules","userStore","useUserStore","getMenuList","res","getMenus","error","ElMessage","handleAdd","handleEdit","row","handleDelete","ElMessageBox","deleteMenu","handleSubmit","updateData","updateMenu","createMenu","resetForm","onMounted"],"mappings":"oeAoCA,MAAMA,EAAQC,EAIRC,EAAOC,EAIPC,EAAeC,EAAS,CAC5B,IAAK,IAAML,EAAM,WACjB,IAAMM,GAAUJ,EAAK,oBAAqBI,CAAK,CAAA,CAChD,EAGKC,EAAW,OAAO,KAAKC,CAAK,EAG5BC,EAAeC,GACZF,EAAME,CAA0B,EAInCC,EAAgBC,GAAiB,CACrCR,EAAa,MAAQQ,CACvB,4rBCwBM,MAAAC,EAAUC,EAAI,EAAK,EACnBC,EAAWD,EAAY,EAAE,EACzBE,EAAgBF,EAAI,EAAK,EACzBG,EAAcH,EAAI,EAAE,EACpBI,EAAaJ,EAAI,EAAK,EAEtBK,EAAUL,EAAkB,EAC5BM,EAAWN,EAAc,CAC7B,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,EACN,UAAW,IAAA,CACZ,EAEKO,EAAmB,CACvB,KAAM,CACJ,CAAE,SAAU,GAAM,QAAS,UAAW,QAAS,MAAO,CACxD,EACA,KAAM,CACJ,CAAE,SAAU,GAAM,QAAS,UAAW,QAAS,MAAO,CACxD,EACA,KAAM,CACJ,CAAE,SAAU,GAAM,QAAS,UAAW,QAAS,MAAO,CAAA,CAE1D,EAGMC,EAAYC,EAAa,EAGzBC,EAAc,SAAY,CAC1B,GAAA,CACFX,EAAQ,MAAQ,GACV,MAAAY,EAAM,MAAMC,EAAS,EACvBD,EAAI,MAAQA,EAAI,KAAK,OAEdV,EAAA,MAAQ,MAAM,QAAQU,EAAI,KAAK,IAAI,EAAIA,EAAI,KAAK,KAAO,CAAC,SAE5DE,EAAO,CACN,QAAA,MAAM,YAAaA,CAAK,EAChCC,EAAU,MAAM,UAAU,EAC1Bb,EAAS,MAAQ,CAAC,CAAA,QAClB,CACAF,EAAQ,MAAQ,EAAA,CAEpB,EAGMgB,EAAY,IAAM,CACtBZ,EAAY,MAAQ,OACpBD,EAAc,MAAQ,EACxB,EAGMc,EAAcC,GAAc,CAChCd,EAAY,MAAQ,OACXG,EAAA,MAAQ,CAAE,GAAGW,CAAI,EAC1Bf,EAAc,MAAQ,EACxB,EAGMgB,EAAe,MAAOD,GAAc,CACpC,GAAA,CACI,MAAAE,GAAa,QAAQ,YAAa,KAAM,CAC5C,KAAM,SAAA,CACP,EAEK,MAAAC,EAAWH,EAAI,EAAE,EACvBH,EAAU,QAAQ,MAAM,EAExB,MAAMN,EAAU,kBAAkB,EACtBE,EAAA,QACLG,EAAO,CACN,QAAA,MAAM,qBAAsBA,CAAK,CAAA,CAE7C,EAGMQ,EAAe,SAAY,CAC3B,GAAChB,EAAQ,MAEP,OAAAA,EAAQ,MAAM,SAAS,EAEzB,GAAA,CAEE,GADJD,EAAW,MAAQ,GACfE,EAAS,MAAM,GAAI,CACrB,MAAMgB,EAAa,CACjB,KAAMhB,EAAS,MAAM,KACrB,KAAMA,EAAS,MAAM,KACrB,KAAMA,EAAS,MAAM,IACvB,EACA,MAAMiB,EAAWjB,EAAS,MAAM,GAAIgB,CAAU,EAC9CR,EAAU,QAAQ,MAAM,EACxB,MAAMN,EAAU,kBAAkB,CAAA,MAE5B,MAAAgB,EAAWlB,EAAS,KAAK,EAC/BQ,EAAU,QAAQ,MAAM,EACxB,MAAMN,EAAU,kBAAkB,EAEpCN,EAAc,MAAQ,GACVQ,EAAA,QACLG,EAAO,CACN,QAAA,MAAM,qBAAsBA,CAAK,CAAA,QACzC,CACAT,EAAW,MAAQ,EAAA,EAEvB,EAGMqB,EAAY,IAAM,CAClBpB,EAAQ,OACVA,EAAQ,MAAM,YAAY,EAE5BC,EAAS,MAAQ,CACf,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,EACN,UAAW,IACb,CACF,EA6DA,OAAAoB,GAAU,IAAM,CACFhB,EAAA,CAAA,CACb"}