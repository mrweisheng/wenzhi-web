{"version":3,"file":"index-BAcU-mu4.js","sources":["../../src/api/user.ts","../../src/views/users/index.vue"],"sourcesContent":["import request from '@/utils/request'\r\nimport type { UserQuery, UserForm } from '@/types/user'\r\nimport type { ApiResponse } from '@/types/response'\r\n\r\n// 获取用户列表\r\nexport function getUsers(params: UserQuery) {\r\n  return request<ApiResponse>({\r\n    url: '/api/users',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 创建用户\r\nexport function createUser(data: UserForm) {\r\n  return request<ApiResponse>({\r\n    url: '/api/users',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新用户\r\nexport function updateUser(id: number, data: Partial<UserForm>) {\r\n  return request<ApiResponse>({\r\n    url: `/api/users/${id}`,\r\n    method: 'put',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除用户\r\nexport function deleteUser(id: number) {\r\n  return request<ApiResponse>({\r\n    url: `/api/users/${id}`,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n// 修改用户状态\r\nexport function updateUserStatus(id: number, data: { status: 0 | 1 }) {\r\n  return request<ApiResponse>({\r\n    url: `/api/users/${id}/status`,\r\n    method: 'put',\r\n    data\r\n  })\r\n} ","<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"toolbar\">\r\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"search-form\">\r\n        <el-form-item>\r\n          <el-input\r\n            v-model=\"queryParams.username\"\r\n            placeholder=\"用户名\"\r\n            clearable\r\n            @keyup.enter=\"handleSearch\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-select \r\n            v-model=\"queryParams.role_id\" \r\n            placeholder=\"角色\" \r\n            clearable\r\n            filterable\r\n          >\r\n            <el-option \r\n              v-for=\"role in roleList\"\r\n              :key=\"role.id\"\r\n              :label=\"role.role_name\"\r\n              :value=\"role.id\"\r\n            >\r\n              {{ role.role_name }}\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-select \r\n            v-model=\"queryParams.status\" \r\n            placeholder=\"状态\" \r\n            clearable\r\n            filterable\r\n          >\r\n            <el-option \r\n              v-for=\"item in statusOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n            >\r\n              {{ item.label }}\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n          <el-button @click=\"resetQuery\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-button type=\"primary\" @click=\"handleAdd\">新增用户</el-button>\r\n    </div>\r\n\r\n    <el-table v-loading=\"loading\" :data=\"userList\" style=\"width: 100%; margin-top: 20px\">\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n      <el-table-column prop=\"username\" label=\"用户名\" />\r\n      <el-table-column prop=\"real_name\" label=\"姓名\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column prop=\"role.role_name\" label=\"角色\" />\r\n      <el-table-column label=\"状态\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          <el-switch\r\n            v-model=\"row.status\"\r\n            :active-value=\"1\"\r\n            :inactive-value=\"0\"\r\n            @change=\"handleStatusChange(row)\"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          {{ formatDate(row.created_at) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n        <template #default=\"{ row }\">\r\n          <el-button type=\"primary\" link @click=\"handleEdit(row)\">编辑</el-button>\r\n          <el-button type=\"danger\" link @click=\"handleDelete(row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 用户表单对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      v-model=\"dialogVisible\"\r\n      width=\"500px\"\r\n      @close=\"resetForm\"\r\n    >\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"userForm\"\r\n        :rules=\"rules\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input \r\n            v-model=\"userForm.username\" \r\n            placeholder=\"请输入用户名\"\r\n            :disabled=\"!!userForm.id\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item \r\n          label=\"密码\" \r\n          prop=\"password\"\r\n          :rules=\"[\r\n            { required: !userForm.id, message: '请输入密码', trigger: 'blur' },\r\n            { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n          ]\"\r\n        >\r\n          <el-input\r\n            v-model=\"userForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"real_name\">\r\n          <el-input v-model=\"userForm.real_name\" placeholder=\"请输入姓名\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"userForm.email\" placeholder=\"请输入邮箱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\" prop=\"role_id\">\r\n          <el-select v-model=\"userForm.role_id\" placeholder=\"请选择角色\">\r\n            <el-option\r\n              v-for=\"role in roleList\"\r\n              :key=\"role.id\"\r\n              :label=\"role.role_name\"\r\n              :value=\"role.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-switch\r\n            v-model=\"userForm.status\"\r\n            :active-value=\"1\"\r\n            :inactive-value=\"0\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\r\n          确定\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 日期范围选择器 -->\r\n    <el-date-picker\r\n      v-model=\"dateRange\"\r\n      type=\"daterange\"\r\n      value-format=\"YYYY-MM-DD\"\r\n      range-separator=\"至\"\r\n      start-placeholder=\"开始日期\"\r\n      end-placeholder=\"结束日期\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, watch } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport type { FormInstance, FormRules } from 'element-plus'\r\nimport { getUsers, createUser, updateUser, deleteUser, updateUserStatus } from '@/api/user'\r\nimport { getRoles } from '@/api/role'\r\nimport type { UserInfo, UserForm, UserQuery } from '@/types/user'\r\nimport type { Role } from '@/types/role'\r\nimport { formatDate } from '@/utils/format'\r\nimport type { ApiPageResponse } from '@/types/response'\r\nimport type { DateModelType } from 'element-plus'\r\nimport { formatDateRange } from '@/utils/date'\r\n\r\nconst loading = ref(false)\r\nconst userList = ref<UserInfo[]>([])\r\nconst roleList = ref<Role[]>([])\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst submitting = ref(false)\r\n\r\nconst formRef = ref<FormInstance>()\r\nconst userForm = ref<UserForm>({\r\n  username: '',\r\n  password: '',\r\n  role_id: 0,\r\n  real_name: '',\r\n  email: '',\r\n  status: 1\r\n})\r\n\r\n// 查询参数\r\nconst queryParams = ref<UserQuery>({\r\n  page: 1,\r\n  pageSize: 10,\r\n  username: '',\r\n  role_id: undefined,\r\n  status: undefined\r\n})\r\n\r\nconst rules: FormRules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n    { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  role_id: [\r\n    { required: true, message: '请选择角色', trigger: 'change' }\r\n  ],\r\n  email: [\r\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 状态选项\r\nconst statusOptions = [\r\n  { label: '启用', value: 1 },\r\n  { label: '禁用', value: 0 }\r\n] as const\r\n\r\n// 分页相关\r\nconst total = ref(0)\r\n\r\n// 搜索表单\r\nconst searchForm = ref({\r\n  username: '',\r\n  role_id: '',\r\n  status: ''\r\n})\r\n\r\n// 日期范围\r\nconst dateRange = ref<[DateModelType, DateModelType] | undefined>()\r\n\r\n// 获取用户列表\r\nconst getUserList = async () => {\r\n  try {\r\n    loading.value = true\r\n    const { data: response } = await getUsers(queryParams.value)\r\n    const { list, total: totalCount } = response.data\r\n    userList.value = list\r\n    total.value = totalCount\r\n  } catch (error) {\r\n    console.error('获取用户列表失败:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取角色列表\r\nconst getRoleList = async () => {\r\n  try {\r\n    const res = await getRoles()\r\n    roleList.value = res.data\r\n    console.log('res', roleList.value)\r\n  } catch (error) {\r\n    console.error('Get roles error:', error)\r\n  }\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  console.log('点击搜索按钮，查询条件:', queryParams.value)  // 添加日志打印\r\n  getUserList()\r\n}\r\n\r\n// 重置查询\r\nconst resetQuery = () => {\r\n  queryParams.value = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    username: '',\r\n    role_id: undefined,\r\n    status: undefined\r\n  }\r\n  getUserList()\r\n}\r\n\r\n// 新增用户\r\nconst handleAdd = () => {\r\n  dialogTitle.value = '新增用户'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑用户\r\nconst handleEdit = (row: UserInfo) => {\r\n  dialogTitle.value = '编辑用户'\r\n  userForm.value = {\r\n    ...row,\r\n    password: '' // 编辑时不显示密码\r\n  }\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 删除用户\r\nconst handleDelete = async (row: UserInfo) => {\r\n  try {\r\n    await ElMessageBox.confirm('确认删除该用户吗？', '提示', {\r\n      type: 'warning'\r\n    })\r\n    \r\n    await deleteUser(row.id)\r\n    ElMessage.success('删除成功')\r\n    getUserList()\r\n  } catch (error) {\r\n    console.error('Delete user error:', error)\r\n  }\r\n}\r\n\r\n// 修改用户状态\r\nconst handleStatusChange = async (row: UserInfo) => {\r\n  try {\r\n    await updateUserStatus(row.id, { status: row.status })\r\n    ElMessage.success('状态更新成功')\r\n  } catch (error) {\r\n    console.error('更新状态失败:', error)\r\n    // 回滚状态\r\n    row.status = row.status === 1 ? 0 : 1\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate()\r\n  \r\n  try {\r\n    submitting.value = true\r\n    const submitData = { ...userForm.value }\r\n    if (!submitData.password) {\r\n      delete submitData.password\r\n    }\r\n    \r\n    if (userForm.value.id) {\r\n      await updateUser(userForm.value.id, submitData)\r\n      ElMessage.success('更新成功')\r\n    } else {\r\n      await createUser(submitData)\r\n      ElMessage.success('创建成功')\r\n    }\r\n    dialogVisible.value = false\r\n    getUserList()\r\n  } catch (error) {\r\n    console.error('Submit user error:', error)\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n// 重置表单\r\nconst resetForm = () => {\r\n  if (formRef.value) {\r\n    formRef.value.resetFields()\r\n  }\r\n  userForm.value = {\r\n    username: '',\r\n    password: '',\r\n    role_id: 0,\r\n    real_name: '',\r\n    email: '',\r\n    status: 1\r\n  }\r\n}\r\n\r\n// 格式化状态显示\r\nconst formatStatus = (status: number) => {\r\n  return statusOptions.find((item) => item.value === status)?.label || '未知'\r\n}\r\n\r\n// 监听日期变化\r\nwatch(dateRange, (val) => {\r\n  const { startTime, endTime } = formatDateRange(val)\r\n  queryParams.value.startTime = startTime\r\n  queryParams.value.endTime = endTime\r\n})\r\n\r\nonMounted(async () => {\r\n  await getUserList()\r\n  await getRoleList()\r\n  console.log('roleList:', roleList.value)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.toolbar {\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.search-form {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n</style>\r\n"],"names":["getUsers","params","request","createUser","data","updateUser","id","deleteUser","updateUserStatus","loading","ref","userList","roleList","dialogVisible","dialogTitle","submitting","formRef","userForm","queryParams","rules","statusOptions","total","dateRange","getUserList","response","list","totalCount","error","getRoleList","res","getRoles","handleSearch","resetQuery","handleAdd","handleEdit","row","handleDelete","ElMessageBox","ElMessage","handleStatusChange","handleSubmit","submitData","resetForm","watch","val","startTime","endTime","formatDateRange","onMounted"],"mappings":"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"}