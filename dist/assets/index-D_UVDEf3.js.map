{"version":3,"file":"index-D_UVDEf3.js","sources":["../../src/api/order.ts","../../src/views/orders/index.vue"],"sourcesContent":["import request from '@/utils/request'\r\nimport type { OrderQuery } from '@/types/order'\r\nimport type { ApiResponse } from '@/types/response'\r\n\r\n// 获取订单列表\r\nexport function getOrders(params: OrderQuery) {\r\n  return request<ApiResponse>({\r\n    url: '/api/orders',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// 处理订单文件\r\nexport function processOrder(data: FormData) {\r\n  return request<ApiResponse>({\r\n    url: '/api/orders/process',\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    },\r\n    data\r\n  })\r\n} ","<template>\r\n  <div class=\"app-container\">\r\n    <!-- 工具栏 -->\r\n    <div class=\"toolbar\">\r\n      <!-- 原有的搜索表单 -->\r\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"search-form\">\r\n        <!-- 将日期选择器移到单独的 div 中 -->\r\n        <div class=\"form-item-group\">\r\n          <el-form-item label=\"订单编号\">\r\n            <el-input\r\n              v-model=\"queryParams.order_id\"\r\n              placeholder=\"请输入\"\r\n              clearable\r\n              @keyup.enter=\"handleSearch\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"支付单号\">\r\n            <el-input\r\n              v-model=\"queryParams.payment_id\"\r\n              placeholder=\"请输入\"\r\n              clearable\r\n              @keyup.enter=\"handleSearch\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"订单渠道\">\r\n            <el-select \r\n              v-model=\"queryParams.channel\" \r\n              placeholder=\"请选择\" \r\n              clearable\r\n              filterable\r\n            >\r\n              <el-option\r\n                v-for=\"item in channelOptions\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n        </div>\r\n        \r\n        <div class=\"form-item-group\">\r\n          <el-form-item label=\"创建时间\">\r\n            <el-date-picker\r\n              v-model=\"dateRange\"\r\n              type=\"daterange\"\r\n              value-format=\"YYYY-MM-DD\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n            <el-button @click=\"resetQuery\">重置</el-button>\r\n            <el-button type=\"success\" @click=\"handleUpdateOrders\">更新订单</el-button>\r\n          </el-form-item>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 数据表格 -->\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"orderList\"\r\n      style=\"width: 100%; margin-top: 20px\"\r\n    >\r\n      <el-table-column prop=\"order_id\" label=\"订单编号\" width=\"180\" />\r\n      <el-table-column prop=\"payment_id\" label=\"支付单号\" width=\"180\" />\r\n      <el-table-column prop=\"amount\" label=\"买家实付金额\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ parseFloat(row.amount).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"status\" label=\"订单状态\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          <el-tag :type=\"getStatusType(row.status)\">\r\n            {{ getStatusLabel(row.status) }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"channel\" label=\"订单渠道\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          {{ getChannelLabel(row.channel) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"refund_amount\" label=\"退款金额\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ parseFloat(row.refund_amount).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"fee\" label=\"手续费\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ parseFloat(row.fee).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"merchant_payment\" label=\"打款商家金额\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          ¥{{ parseFloat(row.merchant_payment).toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"create_time\" label=\"创建时间\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          {{ formatDate(row.create_time) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"confirm_time\" label=\"确认收货时间\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          {{ formatDate(row.confirm_time) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"merchant_remark\" label=\"商家备注\" min-width=\"200\" />\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination-container\">\r\n      <el-pagination\r\n        v-model:current-page=\"queryParams.page\"\r\n        v-model:page-size=\"queryParams.pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 更新订单对话框 -->\r\n    <el-dialog\r\n      title=\"更新订单\"\r\n      v-model=\"updateDialogVisible\"\r\n      width=\"800px\"\r\n      :close-on-click-modal=\"false\"\r\n      class=\"update-dialog\"\r\n    >\r\n      <div class=\"update-dialog-content\">\r\n        <!-- 左侧渠道选择 -->\r\n        <div class=\"channel-select\">\r\n          <h3>选择渠道</h3>\r\n          <div class=\"channel-buttons\">\r\n            <div \r\n              v-for=\"channel in channels\" \r\n              :key=\"channel\"\r\n              class=\"channel-button\"\r\n              :class=\"{ active: selectedChannel === channel }\"\r\n              @click=\"selectedChannel = channel\"\r\n            >\r\n              <span class=\"channel-icon\">\r\n                <el-icon><Money /></el-icon>\r\n              </span>\r\n              <span class=\"channel-name\">{{ channel }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧文件上传 -->\r\n        <div class=\"file-upload\">\r\n          <h3>上传文件</h3>\r\n          \r\n          <!-- 支付宝和企业微信的单文件上传 -->\r\n          <template v-if=\"['支付宝', '企业微信'].includes(selectedChannel)\">\r\n            <el-upload\r\n              ref=\"uploadRef\"\r\n              class=\"upload-area\"\r\n              action=\"#\"\r\n              :auto-upload=\"false\"\r\n              :limit=\"1\"\r\n              :on-change=\"handleOrderFileChange\"\r\n            >\r\n              <template #trigger>\r\n                <el-button type=\"primary\">选择订单文件</el-button>\r\n              </template>\r\n              <template #tip>\r\n                <div class=\"el-upload__tip\">\r\n                  请选择 Excel 格式的订单文件\r\n                </div>\r\n              </template>\r\n            </el-upload>\r\n          </template>\r\n\r\n          <!-- 慧辞和匠易艺的双文件上传 -->\r\n          <template v-else-if=\"['慧辞', '匠易艺'].includes(selectedChannel)\">\r\n            <div class=\"multi-upload\">\r\n              <el-upload\r\n                ref=\"uploadRef\"\r\n                class=\"upload-area\"\r\n                action=\"#\"\r\n                :auto-upload=\"false\"\r\n                :limit=\"1\"\r\n                :on-change=\"handleOrderFileChange\"\r\n              >\r\n                <template #trigger>\r\n                  <el-button type=\"primary\">选择订单文件</el-button>\r\n                </template>\r\n                <template #tip>\r\n                  <div class=\"el-upload__tip\">\r\n                    请选择 Excel 格式的订单文件\r\n                  </div>\r\n                </template>\r\n              </el-upload>\r\n\r\n              <el-upload\r\n                class=\"upload-area\"\r\n                action=\"#\"\r\n                :auto-upload=\"false\"\r\n                :limit=\"1\"\r\n                :on-change=\"handleRefundFileChange\"\r\n              >\r\n                <template #trigger>\r\n                  <el-button type=\"primary\">选择退款文件</el-button>\r\n                </template>\r\n                <template #tip>\r\n                  <div class=\"el-upload__tip\">\r\n                    请选择 Excel 格式的退款文件\r\n                  </div>\r\n                </template>\r\n              </el-upload>\r\n            </div>\r\n          </template>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <el-button @click=\"updateDialogVisible = false\">取消</el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"handleSubmitUpdate\" \r\n          :loading=\"updating\"\r\n          :disabled=\"!canSubmit\"\r\n        >\r\n          确定更新\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, computed, watch } from 'vue'\r\nimport { getOrders, processOrder } from '@/api/order'\r\nimport type { Order, OrderQuery } from '@/types/order'\r\nimport type { ApiResponse, ApiPageResponse } from '@/types/response'\r\nimport { formatDate } from '@/utils/format'\r\nimport { ElMessage } from 'element-plus'\r\nimport type { FormInstance } from 'element-plus'\r\nimport type { UploadFile, UploadFiles, UploadRawFile } from 'element-plus'\r\nimport type { DateModelType } from 'element-plus'\r\n\r\n// 数据加载状态\r\nconst loading = ref(false)\r\nconst orderList = ref<Order[]>([])\r\nconst total = ref(0)\r\n\r\n// 查询参数\r\nconst queryParams = ref<OrderQuery>({\r\n  page: 1,\r\n  pageSize: 10,\r\n  order_id: '',\r\n  payment_id: '',\r\n  channel: '',\r\n  startTime: '',\r\n  endTime: ''\r\n})\r\n\r\n// 日期范围\r\nconst dateRange = ref<[DateModelType, DateModelType] | undefined>()\r\n\r\n// 获取列表数据\r\nconst getList = async () => {\r\n  try {\r\n    loading.value = true\r\n    const { data: response } = await getOrders(queryParams.value)\r\n    const { list, total: totalCount } = response.data\r\n    orderList.value = list\r\n    total.value = totalCount\r\n  } catch (error) {\r\n    console.error('获取订单列表失败:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 监听日期范围变化\r\nwatch(dateRange, (val) => {\r\n  if (val && val[0] && val[1]) {\r\n    queryParams.value.startTime = String(val[0])\r\n    queryParams.value.endTime = String(val[1])\r\n  } else {\r\n    queryParams.value.startTime = ''\r\n    queryParams.value.endTime = ''\r\n  }\r\n})\r\n\r\n// 渠道选项\r\nconst channelOptions = [\r\n  { value: '', label: '全部' },\r\n  { value: '支付宝', label: '支付宝' },\r\n  { value: '企业微信', label: '企业微信' },\r\n  { value: '匠易艺', label: '匠易艺' },\r\n  { value: '慧辞', label: '慧辞' }\r\n]\r\n\r\n// 获取状态标签类型\r\nconst getStatusType = (status: string): 'success' | 'warning' | 'info' | 'primary' | 'danger' => {\r\n  const typeMap: Record<string, 'success' | 'warning' | 'info' | 'primary' | 'danger'> = {\r\n    paid: 'success',\r\n    pending: 'warning',\r\n    cancelled: 'danger',\r\n    refunded: 'info',\r\n    completed: 'success'\r\n  }\r\n  return typeMap[status] || 'info'\r\n}\r\n\r\n// 获取状态标签文本\r\nconst getStatusLabel = (status: string) => {\r\n  const map: Record<string, string> = {\r\n    pending: '待支付',\r\n    paid: '已支付',\r\n    completed: '已完成',\r\n    refunded: '已退款',\r\n    cancelled: '已取消'\r\n  }\r\n  return map[status] || status\r\n}\r\n\r\n// 获取渠道标签文本\r\nconst getChannelLabel = (channel: string) => {\r\n  const map: Record<string, string> = {\r\n    '': '全部',\r\n    '支付宝': '支付宝',\r\n    '企业微信': '企业微信',\r\n    '匠易艺': '匠易艺',\r\n    '慧辞': '慧辞'\r\n  }\r\n  return map[channel] || channel\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  queryParams.value.page = 1\r\n  getList()\r\n}\r\n\r\n// 重置查询\r\nconst resetQuery = () => {\r\n  queryParams.value = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    order_id: '',\r\n    payment_id: '',\r\n    channel: '',\r\n    startTime: '',\r\n    endTime: ''\r\n  }\r\n  dateRange.value = undefined\r\n  getList()\r\n}\r\n\r\n// 分页大小变化\r\nconst handleSizeChange = (val: number) => {\r\n  queryParams.value.pageSize = val\r\n  getList()\r\n}\r\n\r\n// 页码变化\r\nconst handleCurrentChange = (val: number) => {\r\n  queryParams.value.page = val\r\n  getList()\r\n}\r\n\r\n// 更新订单相关的状态\r\nconst updateDialogVisible = ref(false)\r\nconst selectedChannel = ref('')\r\nconst orderFile = ref<File | null>(null)\r\nconst refundFile = ref<File | null>(null)\r\nconst updating = ref(false)\r\n\r\n// 打开更新订单对话框\r\nconst handleUpdateOrders = () => {\r\n  updateDialogVisible.value = true\r\n  selectedChannel.value = ''\r\n  orderFile.value = null\r\n  refundFile.value = null\r\n}\r\n\r\n// 文件上传相关\r\nconst handleOrderFileChange = (uploadFile: UploadFile, uploadFiles: UploadFiles) => {\r\n  orderFile.value = uploadFile.raw as File\r\n}\r\n\r\nconst handleRefundFileChange = (uploadFile: UploadFile, uploadFiles: UploadFiles) => {\r\n  refundFile.value = uploadFile.raw as File\r\n}\r\n\r\n// 判断是否可以提交\r\nconst canSubmit = computed(() => {\r\n  if (!selectedChannel.value) return false\r\n  \r\n  if (['支付宝', '企业微信'].includes(selectedChannel.value)) {\r\n    return !!orderFile.value\r\n  }\r\n  \r\n  if (['慧辞', '匠易艺'].includes(selectedChannel.value)) {\r\n    return !!orderFile.value && !!refundFile.value\r\n  }\r\n  \r\n  return false\r\n})\r\n\r\n// 监听渠道变化\r\nwatch(selectedChannel, () => {\r\n  // 清空已选择的文件\r\n  orderFile.value = null\r\n  refundFile.value = null\r\n  // 重置上传组件\r\n  const uploadRefs = document.querySelectorAll('.el-upload__input')\r\n  uploadRefs.forEach((input: any) => {\r\n    input.value = ''\r\n  })\r\n})\r\n\r\n// 提交更新\r\nconst handleSubmitUpdate = async () => {\r\n  if (!canSubmit.value) return\r\n  \r\n  try {\r\n    updating.value = true\r\n    \r\n    if (!orderFile.value) {\r\n      ElMessage.error('请选择订单文件')\r\n      return\r\n    }\r\n    \r\n    if (['慧辞', '匠易艺'].includes(selectedChannel.value) && !refundFile.value) {\r\n      ElMessage.error('请选择退款文件')\r\n      return\r\n    }\r\n    \r\n    const formData = new FormData()\r\n    formData.append('channel', selectedChannel.value)\r\n    formData.append('order_file', orderFile.value)\r\n    if (refundFile.value) {\r\n      formData.append('refund_file', refundFile.value)\r\n    }\r\n\r\n    const { data } = await processOrder(formData)\r\n    ElMessage.success('处理成功')\r\n    updateDialogVisible.value = false\r\n    getList()\r\n  } catch (error: any) {\r\n    console.error('处理订单失败:', error)\r\n    const errorMsg = error.response?.data?.message || '处理失败，请稍后重试'\r\n    ElMessage.error(errorMsg)\r\n  } finally {\r\n    updating.value = false\r\n  }\r\n}\r\n\r\n// 定义渠道列表\r\nconst channels = ['支付宝', '企业微信', '慧辞', '匠易艺']\r\n\r\nonMounted(() => {\r\n  getList()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.toolbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 20px;\r\n  \r\n  .search-form {\r\n    flex: 1;\r\n    margin-left: 20px;\r\n  }\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n:deep(.el-table) {\r\n  .content-cell {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n}\r\n\r\n// 优化日期选择器在移动端的显示\r\n:deep(.el-date-editor) {\r\n  width: 240px;\r\n}\r\n\r\n.update-dialog {\r\n  :deep(.el-dialog__header) {\r\n    margin: 0;\r\n    padding: 20px 24px;\r\n    border-bottom: 1px solid #EBEEF5;\r\n    \r\n    .el-dialog__title {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  \r\n  :deep(.el-dialog__body) {\r\n    padding: 24px;\r\n  }\r\n}\r\n\r\n.update-dialog-content {\r\n  display: flex;\r\n  gap: 40px;\r\n\r\n  .channel-select {\r\n    flex: 0 0 240px;\r\n    \r\n    h3 {\r\n      margin: 0 0 20px;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      color: #303133;\r\n    }\r\n    \r\n    .channel-buttons {\r\n      display: grid;\r\n      gap: 16px;\r\n      \r\n      .channel-button {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 12px;\r\n        padding: 16px;\r\n        background: #F5F7FA;\r\n        border: 1px solid #E4E7ED;\r\n        border-radius: 8px;\r\n        cursor: pointer;\r\n        transition: all 0.3s;\r\n        \r\n        &:hover {\r\n          background: #EBEEF5;\r\n        }\r\n        \r\n        &.active {\r\n          background: #ecf5ff;\r\n          border-color: #409EFF;\r\n          color: #409EFF;\r\n          \r\n          .channel-icon {\r\n            background: #409EFF;\r\n            color: white;\r\n          }\r\n        }\r\n        \r\n        .channel-icon {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          width: 32px;\r\n          height: 32px;\r\n          background: #909399;\r\n          color: white;\r\n          border-radius: 6px;\r\n          \r\n          .el-icon {\r\n            font-size: 18px;\r\n          }\r\n        }\r\n        \r\n        .channel-name {\r\n          font-size: 15px;\r\n          font-weight: 500;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .file-upload {\r\n    flex: 1;\r\n    padding-left: 40px;\r\n    border-left: 1px solid #EBEEF5;\r\n    \r\n    h3 {\r\n      margin: 0 0 24px;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      color: #303133;\r\n    }\r\n    \r\n    .upload-area {\r\n      margin-bottom: 24px;\r\n      \r\n      :deep(.el-upload) {\r\n        width: 100%;\r\n        \r\n        .el-button {\r\n          width: 100%;\r\n          height: 40px;\r\n        }\r\n      }\r\n      \r\n      :deep(.el-upload__tip) {\r\n        margin-top: 8px;\r\n        color: #909399;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"names":["getOrders","params","request","processOrder","data","loading","ref","orderList","total","queryParams","dateRange","getList","response","list","totalCount","error","watch","val","channelOptions","getStatusType","status","getStatusLabel","getChannelLabel","channel","handleSearch","resetQuery","handleSizeChange","handleCurrentChange","updateDialogVisible","selectedChannel","orderFile","refundFile","updating","handleUpdateOrders","handleOrderFileChange","uploadFile","uploadFiles","handleRefundFileChange","canSubmit","computed","input","handleSubmitUpdate","ElMessage","formData","errorMsg","_b","_a","channels","onMounted"],"mappings":"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"}